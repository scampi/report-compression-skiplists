%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 278 575 513
%%Creator: yExport 1.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, December 16, 2010 6:21:52 AM GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
888 374 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
888.000 0.00000 l
888.000 374.000 l
0.00000 374.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 888 374 rc
q
[ 1.60682 0.00000 0.00000 1.60682 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -74.0000 -166.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
74.0000 166.000 m
627.000 166.000 l
627.000 399.000 l
74.0000 399.000 l
74.0000 166.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.60682 0.00000 0.00000 1.60682 -118.905 -266.732 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.60682 0.00000 0.00000 1.60682 -118.905 -266.732 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.60682 0.00000 0.00000 1.60682 -118.905 -266.732 ] defaultmatrix matrix concatmatrix setmatrix
q
[ 60.3676 0.00000 0.00000 100.198 80.0000 250.000 ] concat
<<
/ImageType 1
/Width 97  /Height 161
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [97 0 0 161 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb"/l+]N2N&B>(]"+ai6&.AaEJRC/C$jHfb5VN`T"N(ZQJq7tK"G2240G"KoK7RDQ&-rDkJNt=h#R5ms
n:JL7pHQstk3T"<%d:U<HZ=MNo:Fsem/PB!cL,"_?XFh[==f3E@B7pn1`FnZ[IQcu"Sba$gV(A:IsH<Z
m@sb[lg*m&PEV2P3h;@'-BeZ>#8\0m&C\&I2F'-8[G!]R+@7uU/JJO+6KN7`nF."Hg"=q25IS,5#uqR=
Xt()!cd0oK#AS4C&KAu,o8BL<o^js]O7=+/`P2T4cj\MZU@.I;G'A-jB$S]Ik4AC@,s]T$do0:lH[GYP
jsD!Z*IrU+Rg^4_WoBE(GE7fG\MStNgcKR6/ndT%a^d/Z_'"tO0`l60D,IS%_-eRR@dSg2$id1M7n6(1
O,kG"NkT1VJ"I'<hu;fbT+DC>#0&!i6E*qAU,a?@p^s1l`NI1&3h8h7+\\.Tn3pk6$>-VI.[>V?(r`4e
!_<_J,sWQ4EALKs+bH;@1-K;^_;&QVTk#:4bJg3d?!U`5jO`^?CIZ^oa=-1.er5%s4A*,@.>H)E#+ZC'
!GL2Y#L[9BU8Nin\n0?p8>a;I^*3X-9^7>YMcr#u]F/mk*Qa%Idjm^_G[r6uXOAkSl'o/!%21,sokq8)
_uWPJaar\ulGN]8*m7f6kkl<TS=Z>#>)0/(-/'.]83meHEBo1(A]T!7qEUHl\Qj=A_\Z_#9l#RqI=QJ'
5(%nlmePeY(Jkh5n*`@1JJOB\Q&,:2SXgdV5/=bUI1aI2:I[/dq+_n@5rM&DM6!a2cAO`SNY;XcB!WA#
L`Fj"".WXm-5.a:/-G$)n??"G3jF^U+fqS>.<"B_TN!DORd%^6XTfRK"j<cEJj]M-o$XgX=EN<AQNUe9
XbU<R[2eQjgnU_C^Sc6pEFF>7RA9NSr7magDo7-ZY7D-S(+_'R$aLV-&0cG6*cI3F0ZU@+`+&UrTqMq&
g[.N@EP'4Uk4;^T&Hk5hT-1]]JP\,88:r6)mV<P\5`/3]>H#O.m;;(K%gE-)OWba&d8op%L;P0Ogk=PD
d(UoW:k$1:&$][Bi;)s0;Wq23SonP]Ud]<]+$>62giNs.*5C]n%LV7A\,00I52=+cTHB68iO\:c"AcF/
j`_F1q)g.=r3?q\7;kYRY!f*aYs/])!'6+Q]fiMFL*>c8.2?K_NPEhi+Tdn-eS6'aM75ESOEW^cK,%3u
;^_]!d0pY624_@*('h)\YN4joN(0Qb#X5tsrt22b@)M/WO#ZSnCI/-iF?4)B/5*Z_Dm`c)\+P)@s+dgH
Xr[$KPt4:h&lFKR<$Dp>844a:;2I\?+q^)26mWICM*t;e&X>mT,na(36rY?BPt4:h&lFKR]ToGIlW*k5
-$&Co^[Rhl\N?RRn@l+rd:[^61X6WDG/R`e+q^)26mWICM*t;e&X>mT,na(36rY?BPt4:h&lFKR<$Dp>
844a:;2I\?+q^)26mWICM*t;e&X>mT,na(36rY?BPt4:h&lFKR<$Dp>844a:;2I\?+q^)26mWICM*t;e
&X>mT,na(36rY?BPt4:hqO2lJcP"4qf[qU&-KZb;pidF-)on:_[nHSUCV/E",FT8e?^>=BkWl%QVGaD@
B_;/Y_i;@C3l`.p)*[cL4P"jA*n/(bM3qPj&/"gFV`Qt%oD/=?:[oGhI@'s6o2icKHN104KW,SJs/XG4
X]DK%nQ[^@R6Cb&8f-Y:hYppV2lQBHr64nB*$-.RF"0.5;^`@D=,OtkX8D/JJ/FsV\Iri4.5$,:\Z$2U
Nm!\BWrd^ZRR]k<Ws/Yi:KLLopoU/\Ad&bNheOe</Ik+3[SA<G/pq>[\Qo,*eI[V'^F((q)deXF$;>l"
+:)OLWmti`?p:3Dj#oINGfk-cDM\-#VFpAAHlekl1)[)_]j;44V.hiW<;>nLY+:L'_?KcY/S'8RZGJ*M
=i<rZGfr&4TGE[D_BbHVV:4\^C_j"PYaA*24L)2uPekNlgY:K^hbl9LNG,;(F*#gmiBOf\\$RR(Mb\`<
MlTV@/9>TT)>H3Qo[%69\2Qr*PAZ`Kq0#+"j3KU$k2N_JCZ8(8A+L_'dG:V/4;`.QdYD4qXGs6P_3pco
q@Gih`;1SaRSKbUI/"UjP*Rm\'6Ec^kF<<55-&48Zg$iCN+YV/`fCF*b%@t<<=4>.b[HeUQaN9[V^K2!
')kC9MtMY?\EH:F-/NHqDW?m=^LFdcDXK0JS=G8EIYH4-`?H$<lZI?V,,J0d/="H(YB%1d#5b+,6%F:[
I,iZ1QU-kU2h"HE=Sh"MY1^dr8,SaI4//aKNo(e%9RXe6]^Q/T3sCJiW[]S9$Vhs^[G"gL6e(FE:@je/
+>EJFH?%dH>-/Pl<Zm]o;/&4d>MHg[#@>hMVpjZ&:-@cn[^I1JJp+cN'D'OLZG3s1)n^QU=SfQ*jhh.a
%t(h,bk`TK8IoaRYfpK/J3Ki&BO@j%q<%9e#0P:N$<6$Zj?6aqG)P%Z)NDbK2s1nWm0h'%T76j-pA*G
~>
Q
1.60000 M
10.0000 M
newpath
97.0425 358.962 m
98.3706 358.962 l
98.3706 364.884 l
98.3706 365.832 98.5451 366.519 98.8940 366.946  c
99.2430 367.373 99.7977 367.587 100.558 367.587  c
101.308 367.587 101.837 367.386 102.144 366.985  c
102.451 366.584 102.605 365.899 102.605 364.931  c
102.605 358.962 l
103.777 358.962 l
103.777 364.915 l
103.777 366.196 103.514 367.129 102.988 367.712  c
102.462 368.295 101.626 368.587 100.480 368.587  c
99.3029 368.587 98.4357 368.285 97.8784 367.681  c
97.3211 367.076 97.0425 366.139 97.0425 364.868  c
97.0425 358.962 l
h
107.987 368.509 m
107.414 368.509 106.722 368.379 105.909 368.118  c
105.909 366.962 l
106.722 367.368 107.430 367.571 108.034 367.571  c
108.399 367.571 108.698 367.475 108.933 367.282  c
109.167 367.090 109.284 366.847 109.284 366.556  c
109.284 366.129 108.956 365.774 108.300 365.493  c
107.565 365.181 l
106.482 364.733 105.940 364.087 105.940 363.243  c
105.940 362.639 106.154 362.165 106.581 361.821  c
107.008 361.478 107.591 361.306 108.331 361.306  c
108.716 361.306 109.190 361.358 109.753 361.462  c
110.019 361.509 l
110.019 362.556 l
109.321 362.347 108.769 362.243 108.362 362.243  c
107.550 362.243 107.144 362.535 107.144 363.118  c
107.144 363.493 107.451 363.811 108.065 364.071  c
108.675 364.321 l
109.352 364.613 109.831 364.918 110.112 365.235  c
110.394 365.553 110.534 365.951 110.534 366.431  c
110.534 367.035 110.297 367.532 109.823 367.923  c
109.349 368.313 108.737 368.509 107.987 368.509  c
h
117.833 368.134 m
117.000 368.384 116.286 368.509 115.692 368.509  c
114.672 368.509 113.841 368.173 113.200 367.501  c
112.560 366.829 112.239 365.951 112.239 364.868  c
112.239 363.826 112.523 362.972 113.091 362.306  c
113.659 361.639 114.380 361.306 115.255 361.306  c
116.088 361.306 116.731 361.600 117.185 362.188  c
117.638 362.777 117.864 363.618 117.864 364.712  c
117.864 365.103 l
113.521 365.103 l
113.698 366.738 114.500 367.556 115.927 367.556  c
116.448 367.556 117.083 367.415 117.833 367.134  c
117.833 368.134 l
h
113.567 364.165 m
116.614 364.165 l
116.614 362.884 116.135 362.243 115.177 362.243  c
114.218 362.243 113.682 362.884 113.567 364.165  c
h
120.029 368.353 m
120.029 361.462 l
121.279 361.462 l
121.279 362.759 l
121.779 361.790 122.498 361.306 123.435 361.306  c
123.560 361.306 123.695 361.316 123.841 361.337  c
123.841 362.509 l
123.623 362.436 123.430 362.399 123.263 362.399  c
122.472 362.399 121.810 362.868 121.279 363.806  c
121.279 368.353 l
120.029 368.353 l
h
f
1.60000 M
10.0000 M
newpath
322.257 304.640 m
321.684 304.640 320.944 304.509 320.038 304.249  c
320.038 303.030 l
321.007 303.489 321.809 303.718 322.444 303.718  c
322.924 303.718 323.312 303.590 323.608 303.335  c
323.905 303.080 324.054 302.744 324.054 302.327  c
324.054 301.994 323.957 301.707 323.765 301.468  c
323.572 301.228 323.215 300.963 322.694 300.671  c
322.101 300.327 l
321.361 299.900 320.840 299.502 320.538 299.132  c
320.236 298.762 320.085 298.327 320.085 297.827  c
320.085 297.160 320.327 296.611 320.812 296.179  c
321.296 295.746 321.913 295.530 322.663 295.530  c
323.330 295.530 324.033 295.640 324.772 295.858  c
324.772 296.983 l
323.856 296.629 323.174 296.452 322.726 296.452  c
322.299 296.452 321.947 296.564 321.671 296.788  c
321.395 297.012 321.257 297.296 321.257 297.640  c
321.257 297.931 321.358 298.189 321.562 298.413  c
321.765 298.637 322.137 298.905 322.679 299.218  c
323.288 299.562 l
324.038 299.989 324.562 300.392 324.858 300.772  c
325.155 301.153 325.304 301.608 325.304 302.140  c
325.304 302.890 325.028 303.494 324.476 303.952  c
323.924 304.410 323.184 304.640 322.257 304.640  c
h
331.720 304.218 m
330.949 304.447 330.287 304.562 329.735 304.562  c
328.798 304.562 328.035 304.252 327.446 303.632  c
326.858 303.012 326.563 302.202 326.563 301.202  c
326.563 300.244 326.824 299.455 327.345 298.835  c
327.866 298.215 328.532 297.905 329.345 297.905  c
330.116 297.905 330.709 298.179 331.126 298.726  c
331.543 299.272 331.751 300.051 331.751 301.062  c
331.751 301.421 l
327.735 301.421 l
327.902 302.931 328.642 303.687 329.954 303.687  c
330.433 303.687 331.022 303.556 331.720 303.296  c
331.720 304.218 l
h
327.782 300.546 m
330.595 300.546 l
330.595 299.369 330.152 298.780 329.267 298.780  c
328.381 298.780 327.886 299.369 327.782 300.546  c
h
337.030 303.608 m
336.343 304.244 335.676 304.562 335.030 304.562  c
334.499 304.562 334.062 304.397 333.718 304.069  c
333.374 303.741 333.202 303.327 333.202 302.827  c
333.202 302.129 333.494 301.593 334.077 301.218  c
334.660 300.843 335.494 300.655 336.577 300.655  c
336.858 300.655 l
336.858 299.890 l
336.858 299.150 336.478 298.780 335.718 298.780  c
335.114 298.780 334.457 298.968 333.749 299.343  c
333.749 298.390 l
334.530 298.077 335.259 297.921 335.937 297.921  c
336.645 297.921 337.168 298.080 337.507 298.397  c
337.845 298.715 338.015 299.213 338.015 299.890  c
338.015 302.780 l
338.015 303.437 338.218 303.765 338.624 303.765  c
338.676 303.765 338.749 303.754 338.843 303.733  c
338.921 304.374 l
338.660 304.499 338.374 304.562 338.062 304.562  c
337.520 304.562 337.176 304.244 337.030 303.608  c
h
336.858 302.983 m
336.858 301.343 l
336.468 301.327 l
335.843 301.327 335.335 301.447 334.944 301.687  c
334.554 301.926 334.358 302.244 334.358 302.640  c
334.358 302.910 334.455 303.142 334.647 303.335  c
334.840 303.528 335.077 303.624 335.358 303.624  c
335.838 303.624 336.338 303.410 336.858 302.983  c
h
340.376 304.421 m
340.376 298.062 l
341.532 298.062 l
341.532 299.249 l
341.991 298.364 342.652 297.921 343.517 297.921  c
343.642 297.921 343.767 297.931 343.892 297.952  c
343.892 299.030 l
343.694 298.957 343.517 298.921 343.360 298.921  c
342.631 298.921 342.022 299.353 341.532 300.218  c
341.532 304.421 l
340.376 304.421 l
h
347.771 304.562 m
346.906 304.562 346.192 304.244 345.630 303.608  c
345.067 302.973 344.786 302.171 344.786 301.202  c
344.786 300.171 345.065 299.366 345.622 298.788  c
346.179 298.210 346.963 297.921 347.974 297.921  c
348.463 297.921 349.015 297.989 349.630 298.124  c
349.630 299.093 l
348.984 298.895 348.453 298.796 348.036 298.796  c
347.453 298.796 346.981 299.017 346.622 299.460  c
346.263 299.903 346.083 300.494 346.083 301.233  c
346.083 301.952 346.265 302.533 346.630 302.976  c
346.994 303.418 347.474 303.640 348.067 303.640  c
348.599 303.640 349.146 303.504 349.708 303.233  c
349.708 304.233 l
348.958 304.452 348.312 304.562 347.771 304.562  c
h
351.433 304.421 m
351.433 295.171 l
352.589 295.171 l
352.589 299.249 l
353.193 298.364 353.938 297.921 354.823 297.921  c
355.375 297.921 355.815 298.095 356.144 298.444  c
356.472 298.793 356.636 299.259 356.636 299.843  c
356.636 304.421 l
355.479 304.421 l
355.479 300.218 l
355.479 299.749 355.409 299.413 355.269 299.210  c
355.128 299.007 354.901 298.905 354.589 298.905  c
353.881 298.905 353.214 299.369 352.589 300.296  c
352.589 304.421 l
351.433 304.421 l
h
362.646 304.421 m
362.646 295.749 l
367.489 295.749 l
367.489 296.671 l
363.864 296.671 l
363.864 299.452 l
366.896 299.452 l
366.896 300.358 l
363.864 300.358 l
363.864 303.499 l
367.739 303.499 l
367.739 304.421 l
362.646 304.421 l
h
369.181 304.421 m
369.181 298.062 l
370.337 298.062 l
370.337 299.249 l
370.941 298.364 371.686 297.921 372.571 297.921  c
373.123 297.921 373.563 298.095 373.892 298.444  c
374.220 298.793 374.384 299.259 374.384 299.843  c
374.384 304.421 l
373.228 304.421 l
373.228 300.218 l
373.228 299.749 373.157 299.413 373.017 299.210  c
372.876 299.007 372.649 298.905 372.337 298.905  c
371.629 298.905 370.962 299.369 370.337 300.296  c
370.337 304.421 l
369.181 304.421 l
h
376.644 306.530 m
376.784 305.530 l
377.451 305.853 378.107 306.015 378.753 306.015  c
380.055 306.015 380.706 305.322 380.706 303.937  c
380.706 302.937 l
380.279 303.832 379.581 304.280 378.612 304.280  c
377.852 304.280 377.248 304.002 376.800 303.444  c
376.352 302.887 376.128 302.140 376.128 301.202  c
376.128 300.233 376.383 299.444 376.894 298.835  c
377.404 298.226 378.065 297.921 378.878 297.921  c
379.586 297.921 380.196 298.207 380.706 298.780  c
380.706 298.062 l
381.878 298.062 l
381.878 302.687 l
381.878 303.687 381.826 304.426 381.722 304.905  c
381.618 305.384 381.420 305.775 381.128 306.077  c
380.628 306.608 379.847 306.874 378.784 306.874  c
378.045 306.874 377.331 306.759 376.644 306.530  c
h
380.706 302.218 m
380.706 299.577 l
380.206 299.046 379.654 298.780 379.050 298.780  c
378.519 298.780 378.102 298.994 377.800 299.421  c
377.498 299.848 377.347 300.431 377.347 301.171  c
377.347 302.567 377.841 303.265 378.831 303.265  c
379.498 303.265 380.123 302.916 380.706 302.218  c
h
384.110 304.421 m
384.110 298.062 l
385.267 298.062 l
385.267 304.421 l
384.110 304.421 l
h
384.110 296.905 m
384.110 295.749 l
385.267 295.749 l
385.267 296.905 l
384.110 296.905 l
h
387.579 304.421 m
387.579 298.062 l
388.735 298.062 l
388.735 299.249 l
389.340 298.364 390.084 297.921 390.970 297.921  c
391.522 297.921 391.962 298.095 392.290 298.444  c
392.618 298.793 392.782 299.259 392.782 299.843  c
392.782 304.421 l
391.626 304.421 l
391.626 300.218 l
391.626 299.749 391.556 299.413 391.415 299.210  c
391.274 299.007 391.048 298.905 390.735 298.905  c
390.027 298.905 389.360 299.369 388.735 300.296  c
388.735 304.421 l
387.579 304.421 l
h
399.683 304.218 m
398.912 304.447 398.250 304.562 397.698 304.562  c
396.761 304.562 395.998 304.252 395.409 303.632  c
394.821 303.012 394.526 302.202 394.526 301.202  c
394.526 300.244 394.787 299.455 395.308 298.835  c
395.828 298.215 396.495 297.905 397.308 297.905  c
398.078 297.905 398.672 298.179 399.089 298.726  c
399.506 299.272 399.714 300.051 399.714 301.062  c
399.714 301.421 l
395.698 301.421 l
395.865 302.931 396.604 303.687 397.917 303.687  c
398.396 303.687 398.985 303.556 399.683 303.296  c
399.683 304.218 l
h
395.745 300.546 m
398.558 300.546 l
398.558 299.369 398.115 298.780 397.229 298.780  c
396.344 298.780 395.849 299.369 395.745 300.546  c
h
f
0 J
1.45000 M
newpath
302.000 263.500 m
418.000 263.500 l
418.000 336.500 l
302.000 336.500 l
302.000 263.500 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
346.843 392.554 m
346.843 384.804 l
343.765 384.804 l
343.765 383.882 l
351.140 383.882 l
351.140 384.804 l
348.062 384.804 l
348.062 392.554 l
346.843 392.554 l
h
352.399 392.554 m
352.399 386.194 l
353.556 386.194 l
353.556 387.382 l
354.014 386.496 354.675 386.054 355.540 386.054  c
355.665 386.054 355.790 386.064 355.915 386.085  c
355.915 387.163 l
355.717 387.090 355.540 387.054 355.384 387.054  c
354.655 387.054 354.045 387.486 353.556 388.351  c
353.556 392.554 l
352.399 392.554 l
h
360.591 391.741 m
359.903 392.377 359.237 392.694 358.591 392.694  c
358.060 392.694 357.622 392.530 357.278 392.202  c
356.935 391.874 356.763 391.460 356.763 390.960  c
356.763 390.262 357.054 389.726 357.638 389.351  c
358.221 388.976 359.054 388.788 360.138 388.788  c
360.419 388.788 l
360.419 388.022 l
360.419 387.283 360.039 386.913 359.278 386.913  c
358.674 386.913 358.018 387.101 357.310 387.476  c
357.310 386.522 l
358.091 386.210 358.820 386.054 359.497 386.054  c
360.205 386.054 360.729 386.213 361.067 386.530  c
361.406 386.848 361.575 387.345 361.575 388.022  c
361.575 390.913 l
361.575 391.569 361.778 391.897 362.185 391.897  c
362.237 391.897 362.310 391.887 362.403 391.866  c
362.481 392.507 l
362.221 392.632 361.935 392.694 361.622 392.694  c
361.080 392.694 360.737 392.377 360.591 391.741  c
h
360.419 391.116 m
360.419 389.476 l
360.028 389.460 l
359.403 389.460 358.896 389.580 358.505 389.819  c
358.114 390.059 357.919 390.377 357.919 390.772  c
357.919 391.043 358.015 391.275 358.208 391.468  c
358.401 391.661 358.638 391.757 358.919 391.757  c
359.398 391.757 359.898 391.543 360.419 391.116  c
h
365.624 392.694 m
365.093 392.694 364.452 392.575 363.702 392.335  c
363.702 391.272 l
364.452 391.647 365.108 391.835 365.671 391.835  c
366.004 391.835 366.280 391.744 366.499 391.562  c
366.718 391.379 366.827 391.153 366.827 390.882  c
366.827 390.496 366.520 390.174 365.905 389.913  c
365.233 389.616 l
364.233 389.210 363.733 388.616 363.733 387.835  c
363.733 387.283 363.931 386.848 364.327 386.530  c
364.723 386.213 365.259 386.054 365.937 386.054  c
366.291 386.054 366.733 386.101 367.265 386.194  c
367.499 386.241 l
367.499 387.210 l
366.853 387.012 366.343 386.913 365.968 386.913  c
365.218 386.913 364.843 387.184 364.843 387.726  c
364.843 388.069 365.124 388.361 365.687 388.601  c
366.249 388.835 l
366.874 389.106 367.319 389.387 367.585 389.679  c
367.851 389.970 367.983 390.340 367.983 390.788  c
367.983 391.340 367.762 391.796 367.319 392.155  c
366.877 392.515 366.312 392.694 365.624 392.694  c
h
370.054 392.554 m
370.054 383.304 l
371.210 383.304 l
371.210 387.382 l
371.814 386.496 372.559 386.054 373.444 386.054  c
373.996 386.054 374.437 386.228 374.765 386.577  c
375.093 386.926 375.257 387.392 375.257 387.976  c
375.257 392.554 l
374.101 392.554 l
374.101 388.351 l
374.101 387.882 374.030 387.546 373.890 387.343  c
373.749 387.140 373.522 387.038 373.210 387.038  c
372.502 387.038 371.835 387.502 371.210 388.429  c
371.210 392.554 l
370.054 392.554 l
h
f
0 J
1.45000 M
newpath
568.293 253.000 m
586.293 253.000 l
586.293 268.000 l
601.293 268.000 l
601.293 296.000 l
568.293 296.000 l
h
S
newpath
586.293 253.000 m
586.293 268.000 l
601.293 268.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
574.574 278.921 m
574.574 277.468 l
576.027 277.468 l
576.027 278.921 l
574.574 278.921 l
h
578.371 278.921 m
578.371 277.468 l
579.824 277.468 l
579.824 278.921 l
578.371 278.921 l
h
582.168 278.921 m
582.168 277.468 l
583.621 277.468 l
583.621 278.921 l
582.168 278.921 l
h
585.965 278.921 m
585.965 277.468 l
587.418 277.468 l
587.418 278.921 l
585.965 278.921 l
h
589.761 278.921 m
589.761 277.468 l
591.215 277.468 l
591.215 278.921 l
589.761 278.921 l
h
593.558 278.921 m
593.558 277.468 l
595.011 277.468 l
595.011 278.921 l
593.558 278.921 l
h
f
0 J
1.45000 M
newpath
512.793 278.500 m
530.793 278.500 l
530.793 293.500 l
545.793 293.500 l
545.793 321.500 l
512.793 321.500 l
h
S
newpath
530.793 278.500 m
530.793 293.500 l
545.793 293.500 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
519.074 304.421 m
519.074 302.968 l
520.527 302.968 l
520.527 304.421 l
519.074 304.421 l
h
522.871 304.421 m
522.871 302.968 l
524.324 302.968 l
524.324 304.421 l
522.871 304.421 l
h
526.668 304.421 m
526.668 302.968 l
528.121 302.968 l
528.121 304.421 l
526.668 304.421 l
h
530.465 304.421 m
530.465 302.968 l
531.918 302.968 l
531.918 304.421 l
530.465 304.421 l
h
534.261 304.421 m
534.261 302.968 l
535.715 302.968 l
535.715 304.421 l
534.261 304.421 l
h
538.058 304.421 m
538.058 302.968 l
539.511 302.968 l
539.511 304.421 l
538.058 304.421 l
h
f
0 J
1.45000 M
newpath
556.293 313.000 m
574.293 313.000 l
574.293 328.000 l
589.293 328.000 l
589.293 356.000 l
556.293 356.000 l
h
S
newpath
574.293 313.000 m
574.293 328.000 l
589.293 328.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
562.574 338.921 m
562.574 337.468 l
564.027 337.468 l
564.027 338.921 l
562.574 338.921 l
h
566.371 338.921 m
566.371 337.468 l
567.824 337.468 l
567.824 338.921 l
566.371 338.921 l
h
570.168 338.921 m
570.168 337.468 l
571.621 337.468 l
571.621 338.921 l
570.168 338.921 l
h
573.965 338.921 m
573.965 337.468 l
575.418 337.468 l
575.418 338.921 l
573.965 338.921 l
h
577.761 338.921 m
577.761 337.468 l
579.215 337.468 l
579.215 338.921 l
577.761 338.921 l
h
581.558 338.921 m
581.558 337.468 l
583.011 337.468 l
583.011 338.921 l
581.558 338.921 l
h
f
1.60000 M
10.0000 M
newpath
525.220 233.939 m
525.220 225.268 l
528.095 225.268 l
528.960 225.268 529.655 225.364 530.181 225.557  c
530.707 225.749 531.163 226.075 531.549 226.533  c
532.163 227.252 532.470 228.205 532.470 229.393  c
532.470 230.840 532.090 231.960 531.330 232.752  c
530.569 233.544 529.497 233.939 528.111 233.939  c
525.220 233.939 l
h
526.439 233.018 m
528.017 233.018 l
529.142 233.018 529.939 232.715 530.408 232.111  c
530.918 231.465 531.174 230.601 531.174 229.518  c
531.174 228.497 530.924 227.695 530.424 227.111  c
530.122 226.757 529.762 226.515 529.345 226.385  c
528.929 226.255 528.299 226.189 527.455 226.189  c
526.439 226.189 l
526.439 233.018 l
h
536.724 234.080 m
535.818 234.080 535.094 233.778 534.552 233.174  c
534.011 232.570 533.740 231.762 533.740 230.752  c
533.740 229.731 534.011 228.924 534.552 228.330  c
535.094 227.736 535.834 227.439 536.771 227.439  c
537.709 227.439 538.448 227.736 538.990 228.330  c
539.532 228.924 539.802 229.731 539.802 230.752  c
539.802 231.783 539.529 232.596 538.982 233.189  c
538.435 233.783 537.683 234.080 536.724 234.080  c
h
536.740 233.221 m
537.969 233.221 538.584 232.398 538.584 230.752  c
538.584 229.117 537.980 228.299 536.771 228.299  c
535.563 228.299 534.959 229.117 534.959 230.752  c
534.959 232.398 535.552 233.221 536.740 233.221  c
h
544.095 234.080 m
543.231 234.080 542.517 233.762 541.955 233.127  c
541.392 232.492 541.111 231.689 541.111 230.721  c
541.111 229.689 541.390 228.885 541.947 228.307  c
542.504 227.729 543.288 227.439 544.299 227.439  c
544.788 227.439 545.340 227.507 545.955 227.643  c
545.955 228.611 l
545.309 228.413 544.778 228.314 544.361 228.314  c
543.778 228.314 543.306 228.536 542.947 228.979  c
542.588 229.421 542.408 230.012 542.408 230.752  c
542.408 231.471 542.590 232.051 542.955 232.494  c
543.319 232.937 543.799 233.158 544.392 233.158  c
544.924 233.158 545.470 233.023 546.033 232.752  c
546.033 233.752 l
545.283 233.971 544.637 234.080 544.095 234.080  c
h
551.742 233.939 m
551.742 232.736 l
551.127 233.632 550.383 234.080 549.508 234.080  c
548.945 234.080 548.500 233.906 548.172 233.557  c
547.844 233.208 547.679 232.736 547.679 232.143  c
547.679 227.580 l
548.836 227.580 l
548.836 231.768 l
548.836 232.247 548.906 232.588 549.047 232.791  c
549.187 232.994 549.419 233.096 549.742 233.096  c
550.450 233.096 551.117 232.632 551.742 231.705  c
551.742 227.580 l
552.883 227.580 l
552.883 233.939 l
551.742 233.939 l
h
555.205 233.939 m
555.205 227.580 l
556.361 227.580 l
556.361 228.768 l
556.924 227.882 557.648 227.439 558.533 227.439  c
559.377 227.439 559.955 227.882 560.267 228.768  c
560.809 227.872 561.517 227.424 562.392 227.424  c
562.955 227.424 563.392 227.590 563.705 227.924  c
564.017 228.257 564.174 228.721 564.174 229.314  c
564.174 233.939 l
563.002 233.939 l
563.002 229.486 l
563.002 228.768 562.715 228.408 562.142 228.408  c
561.549 228.408 560.924 228.830 560.267 229.674  c
560.267 233.939 l
559.111 233.939 l
559.111 229.486 l
559.111 228.757 558.814 228.393 558.220 228.393  c
557.648 228.393 557.028 228.820 556.361 229.674  c
556.361 233.939 l
555.205 233.939 l
h
571.064 233.736 m
570.293 233.965 569.632 234.080 569.080 234.080  c
568.142 234.080 567.379 233.770 566.791 233.150  c
566.202 232.531 565.908 231.721 565.908 230.721  c
565.908 229.762 566.168 228.973 566.689 228.354  c
567.210 227.734 567.877 227.424 568.689 227.424  c
569.460 227.424 570.054 227.697 570.470 228.244  c
570.887 228.791 571.095 229.570 571.095 230.580  c
571.095 230.939 l
567.080 230.939 l
567.247 232.450 567.986 233.205 569.299 233.205  c
569.778 233.205 570.366 233.075 571.064 232.814  c
571.064 233.736 l
h
567.127 230.064 m
569.939 230.064 l
569.939 228.887 569.497 228.299 568.611 228.299  c
567.726 228.299 567.231 228.887 567.127 230.064  c
h
573.094 233.939 m
573.094 227.580 l
574.250 227.580 l
574.250 228.768 l
574.854 227.882 575.599 227.439 576.484 227.439  c
577.036 227.439 577.476 227.614 577.804 227.963  c
578.133 228.312 578.297 228.778 578.297 229.361  c
578.297 233.939 l
577.140 233.939 l
577.140 229.736 l
577.140 229.268 577.070 228.932 576.929 228.729  c
576.789 228.525 576.562 228.424 576.250 228.424  c
575.541 228.424 574.875 228.887 574.250 229.814  c
574.250 233.939 l
573.094 233.939 l
h
582.447 234.080 m
581.864 234.080 581.408 233.913 581.080 233.580  c
580.752 233.247 580.588 232.778 580.588 232.174  c
580.588 228.439 l
579.791 228.439 l
579.791 227.580 l
580.588 227.580 l
580.588 226.424 l
581.744 226.314 l
581.744 227.580 l
583.400 227.580 l
583.400 228.439 l
581.744 228.439 l
581.744 231.971 l
581.744 232.804 582.103 233.221 582.822 233.221  c
582.968 233.221 583.150 233.195 583.369 233.143  c
583.369 233.939 l
583.015 234.033 582.707 234.080 582.447 234.080  c
h
586.717 234.080 m
586.185 234.080 585.545 233.960 584.795 233.721  c
584.795 232.658 l
585.545 233.033 586.201 233.221 586.763 233.221  c
587.097 233.221 587.373 233.130 587.592 232.947  c
587.810 232.765 587.920 232.538 587.920 232.268  c
587.920 231.882 587.612 231.559 586.998 231.299  c
586.326 231.002 l
585.326 230.596 584.826 230.002 584.826 229.221  c
584.826 228.669 585.024 228.234 585.420 227.916  c
585.816 227.598 586.352 227.439 587.029 227.439  c
587.383 227.439 587.826 227.486 588.357 227.580  c
588.592 227.627 l
588.592 228.596 l
587.946 228.398 587.435 228.299 587.060 228.299  c
586.310 228.299 585.935 228.570 585.935 229.111  c
585.935 229.455 586.217 229.747 586.779 229.986  c
587.342 230.221 l
587.967 230.492 588.412 230.773 588.677 231.064  c
588.943 231.356 589.076 231.726 589.076 232.174  c
589.076 232.726 588.855 233.182 588.412 233.541  c
587.969 233.900 587.404 234.080 586.717 234.080  c
h
f
q
[ 56.0112 0.00000 0.00000 43.5642 332.153 188.500 ] concat
<<
/ImageType 1
/Width 90  /Height 70
/BitsPerComponent 8
/Decode [0 1 0 1 0 1]
/ImageMatrix [90 0 0 70 0 0]
/DataSource currentfile /ASCII85Decode filter /FlateDecode filter 
>> image
Gb!laBic3e*lYn@I"=:6o;^utR=6kHDnA)J)q0X81q%C\d:e,)'":9J"Yn"#NJ\q>/g@>'Z6KW'La]dO
I>cc?p=rW$l4OY&@a)\PpB=BH;tn=\lM27dO$>sFGP=[%Mr;U7gbWSPIe_mMfBA$H\;ZBZNfO*?Y?lq,
HA%e`pSCM3T0:Ikq<HM"Mi5b#L15FR2(InVO$?r7HT!$/S&JnrYuj-2mHq3q6*3\RK851h]iY[^,SG`/
C*YBp)<Gn&68:Yd4?bN0*Z_Z(9'$2W;H_&[Chg@PUNpXWeumIrlLjY2_;I!c*@?s`2OgTr(>$J-4Cb_.
mIo5TagnB"O43?93p3E=k?Y7dR@/c^fu:M4-'.5oa0Rlm^ESm+l).]_o'"XVk0H94+\Qp!1>;^.1eLB?
J,D%`_M.;l[\0e+TC2RPI`.RF9s@;L%a3sGL#T4iLFr#:aMd9j;Hm-N)a$#j=0!]+RRsW)8uJ0,lQ$1^
'/gc,9d\Ke\BA][YukTb-JVYf/8VZ;g$PBQ8^GnNfAW*@3Yu&(`L3,?[sMh4p2+?DG@c5PF^\]qBkdP9
j,N0^c'=Qre^^epp$I`u*Ns\;mtBZJ;XQ3Qi6.*/-n*p/hg[9n=CRDTnNZsd;dB5+g&9^]4=$%+,n`6J
$AaB?`(C(SB\5Vg#K/n0+_XQ%L(B*0"@CJ&!tEoA+D^H^#YANDDV=&Q60*`Re]#LO5ZUoD6"=bKH[U<T
@q3!M9bM^)R@.VWFT-[Io^qd&d;Z]\B?nEs#cMc'"+K\)<"_$H+&`]`hFRr=eRN&tQ4Dt`4Ve.cZ+*?T
A!<q5fU+PcZn!V0&IK9Z3o>jM6D6Sak":#KG!gm9cpFF,/2krA@J\&kd+6BkH;Np]WX%)_XWB"bH2n4N
%pW"aSp=l-<TL0YW-\:1jmd%IHGmj8-R5BGn,llu`'Zlr*tA6rO?ia/TiBb05XO(T!-21)(8uNZ83f<r
kk/V)P6IQUPq+eU.jq66AS'uu1idZ\nZVNTCDn,srS5dT9[GK+Im(#md+8Y*&*G,/Qp%GjmskPC#BmJi
P>=odLKl8W=Up5IpbZGhdNTlaA$bul*f9gMhld%i&kK6QN!Ipd!"u(K"H^Odi=8nL[m1G(#CoYD!"ce'
nDs&pI=PS-Z"[s\qNrZh2RXeRiZfZ]!OJas7!EFI6mU2jHO[%]$090R*5%g@=c\3Im@X(@gMNp9\D<hJ
3+tIZgO]Wsn9?_'o.Mc[,$IrF@UEL"0kj`@PLu=6@rF4^%J^mb">gB,#!.j=ocSh4l='@d8'p'-1kP/(
":]9W4`EDEX<(KYIco&9oHP8Z?f-+P$Y`Ct)"16n]8*r6cb7#%K7j#1f>ILuof.%1400KP_\d%e@pjtJ
(XnJKYcr4bC[3r:=KI7uaFq0LX0@$!c/hP%#BfM@e0F0pqnD_/0oYqnEF9UcQI]*9?]&XNnr\sKaEP1"
a.\We??#US@TaSXV+!^0QAJG:o)h=[a%$SKT41i.>MI#CP@'46lq4'H:<q;PF@W'Mp$24\F4\^/9knJa
5T/eRmT*caqQP9nY$'RsG57uMm3g=f\s+NWMiXYg46ql`8rAX(6c\E10S@%R1d52.5/jU`V`^Q@*i,[1
)ZaA"\+S"82kara</.?MjQ,Aa`2=QtA7.Y1;a>^eJm;&8orLola-!^>8>Pk#o'<J.aB2bT[C<U]RRTqC
2c^8$Qes/uR1'L;kVN@lb834?itM?r,UD/7`k8sIV5:$82"'2#5'JWUUnek3UKQ!rVnl!q"*,UYpscW2
T!l*Yk]%Gu11\VMaKo'PTkVHcB;%k=FZoL&ao]CM?_85n#U&S?O-?$_K@V:>XT#@Dpnm7p$4H0^0d.]]
FEB>BMXBfeoB3;a\<,G$0'Dg@P^@^U1`Cg.N^&K9hlY[RAp&D_6Hn^;9TN+X/O3!g@GTbq+_XPC36n-l
9h`4Ck7:M2os;,/%2o9?#eo&JW5k%,]!!/&4KEhBbOe2-XqWVL]"3V-5GSf"%UZ`-QC1k[!gGc.7n==A
;30$]WsaV"HDn?`/0lesWX(>Of@71e4nnDdE1rpu/s?8XmrmHh@TGu^o_L"_W:]^k,gFHAmrl;RUQLtd
N/kW'AL.nH;Po`d*D"Q52P;+h2lkEm&U[WOSmJ4Jb0R7[d^6C:_rc$ajKYtKkid*sCn7,lUq=4&6"t^o
4\gK-a#?QNWiG>Ld^Ze\M*qu@L=a%ZnR;\<'F7OT1's`gU)p4R/,*JY3^/bM`T;sh(?TYlK$NOoof.u/
VjAC!0a8Odf&P[BB)!(HqI0%Vri?T=oOq=/A0N[b<W2RSdm+h!^@9RIRfru'(rAiX."]qCR!O/XX<+Yg
Tmeu?fi%'PgaFN?Q3Ei*REYNNQZ'.^m=7HiTFnaV?dl*:h40@gT3m5`R@3ed2I#)co_S6tbEj*kbp"51
\dtp`f/9Vh4]EgFMheqo.Ci'IdZ;EEqGp8u,;(TqE)8q$LUbkq"66Z*JobmkO#p#^GfjE]eEcK_SIO.b
XW#H;=q+\8.Pn/*Rc)Rjj2d#W*ZilC&*jo:SQr=OAMT6EWeMf4'eC-$L5&0+O_=m;lmEJs#g3GWjSf%_
^-67<T*4TH&bko+Fa&`L%sE+'8IGY'*?G*+INRNTR)eN1C[:Q%PKO]&DJnUS9hdaup%9m?"Y:j<<oEH0
)N?a(-BlPfgu%#02>25\Y6eW\I7`W+U$'ao59ofbd,*X9'10<aG'8&;$#L:.gt^[-Zqb:OD/GQb$DHSC
ji<%?#V@Y]/eFI!jRmg^K]_FZAdQ!Sc-4DA#YbtQ3h6aI;hQJF-gcS'KQ*8=6-)C6Cc7=f17:g*U[cKl
CnqQ2ceI3.Z*@Fp4nA*9!TiILOh.?adVh<^1-#>g<=i1fWiK?c3^:C'Da$rk]nb2U(08;07VccU;W#-4
:TrAK.!Bd*`5UiR04):".iNha,,@t+b*>Sq'Fh\1'c2'U0<]\o;#&C6WQ#Jhk4.0)q0ZjHp"OD/"9N;I
dD33-@$Dg]<E1V.T@_[&n;9\F%7;%FAW=c;<)cH6k?&u!nTSVYQbnggLVlLQ4*O<e:WSqd3Oph-5'MAN
8Joke#l9ZH4oIQ)T4:s9H8R?=Sb_Em^7X9WoK,dNI<t#(9:B2^o\??W1d1MGc_i-ImJ=3Me$`%V1i<)r
iR9h^CHelsZpN6I:LFZMTHTH=&O.]nT:F68>"_1K?;6CZO8X'GlN05%_2+og!nGg@I)XptZ@mmYWDr?<
JM7ZC;crf+"H&)h-m"l6R[@3]YcpaN*j8s[3kogr.YMq:7dfIOK#!p=jgZ]n(p(Zo_S*X\=R9/;Gir%N
#ZkD=er\U%[Xl5r>>0[cOH`]MK*I!<I-rZT<.t];;EGjN&7@2Z&r@k_koTc`akP!#Y0So_,g\eke-#mk
N7+;hT&eu00Y*s0`b[U@CB:F%FpA:`AsRR`G@.s_"E/*miXiP4:H/[<5#RkD((eR0qNJqYiaZf=QrW:d
8]Zh>_o$5H7S69-m-uXb&;IR2E"Y148u5,kaN>t[BU$:RcTF4n4q8s&OYrSI&BN"o!0-<rRIK"%(\^XK
_s0P\p\.bb`$SGd=ZJ5mK'`l*=Y(>D_nkBL_81.Y3.r5!4=Dd5`?@>b(`4[kWOTIJ[^LAPM\16DBJeF.
+?Q&]d;Z_\Y`;POon1,`,&RD&><`ND3h9$He`(>&4/pNNc=&7a[2P*+.[<OM&dj>;5Fsbl2rgi=/B22h
iGuI\/M0[k9oY-l9I=iZM\5M([D?7IBV_Mk_Ch/of2s$K4=IjoGnh2o!8R5**Z8qd:;lMdm0+B_(R$Zi
$AD/#_^:DAXf\]RQ!>phC%1qG*fl'm_$%1!r*fdCaJ.-d5ThG0Ueq=XSM#<M34aN7-VaaOD>P$$je,R&
+#MRbEQ[6pejnpaG#e)]JfqI%CBf?[S4_.!9.Pc<NbJUsNST6(Z8u,,%j+!j4[hs(ZA>[LYM]7QrlV_J
D#NN%=)jDa;4t^7ciAXO\(REoj$l$k3U&fc\[f8aK>Md(A80QDea8p%\3f%ZqYt_ApO0.Bq\];+&S(k;
/,-e<8b+:(+dZAL!WaC&$J8s[`,-Ms4[1?25UT4"TqUH@.14nVPhl26o&'HarU0-Lhu.3KIlp^]<XO*d
\$8Ie2J*)CgUF4KUS*.$T$Gc!a6e%3o&;9VrlZA&Gk+onl=We<^=VZS(5p-5/9m+j'Ni/%r2gU8j!d/!
YN'J%[cGbtjMh<^02G[5!$[L,#-OKBSin<*#8?YEe:E/_&BN1I!#boi/3U\0b8"1eJJEcTI-\XnlMD%D
>$Thk!p/NdQk5RLehT!1@>.$X%R5)Z8s#U[?un::GY7nQQT-4B%JTNEN(-a5aClRVo7tEF/66%X<u8j_
EpI/?>ArB"Jf0M^2Oe&\hu.C2)3L/B>Z+IXbI_)aVuEOs=-_o[_4<[Vh@M$JHagSdWkPU;%@;BWJ+Pta
^r7(:\D26CX1k=fRs/.TD$)cUVUB-7qOo$#reCli'ob[=p8n]?Z+XTKIJs""7H"3T+u0&~>
Q
1.60000 M
10.0000 M
newpath
344.858 179.939 m
344.858 171.268 l
346.093 171.268 l
346.093 179.939 l
344.858 179.939 l
h
348.362 179.939 m
348.362 173.580 l
349.519 173.580 l
349.519 174.768 l
350.123 173.882 350.868 173.439 351.753 173.439  c
352.305 173.439 352.745 173.614 353.073 173.963  c
353.401 174.312 353.565 174.778 353.565 175.361  c
353.565 179.939 l
352.409 179.939 l
352.409 175.736 l
352.409 175.268 352.339 174.932 352.198 174.729  c
352.058 174.525 351.831 174.424 351.519 174.424  c
350.810 174.424 350.144 174.887 349.519 175.814  c
349.519 179.939 l
348.362 179.939 l
h
359.888 179.939 m
359.888 178.736 l
359.419 179.632 358.716 180.080 357.778 180.080  c
357.007 180.080 356.403 179.801 355.966 179.244  c
355.528 178.687 355.310 177.924 355.310 176.955  c
355.310 175.893 355.557 175.041 356.052 174.400  c
356.547 173.760 357.200 173.439 358.013 173.439  c
358.773 173.439 359.398 173.726 359.888 174.299  c
359.888 170.689 l
361.060 170.689 l
361.060 179.939 l
359.888 179.939 l
h
359.888 175.096 m
359.294 174.564 358.731 174.299 358.200 174.299  c
357.086 174.299 356.528 175.148 356.528 176.846  c
356.528 178.325 357.023 179.064 358.013 179.064  c
358.648 179.064 359.273 178.715 359.888 178.018  c
359.888 175.096 l
h
368.019 179.736 m
367.248 179.965 366.586 180.080 366.034 180.080  c
365.097 180.080 364.334 179.770 363.745 179.150  c
363.157 178.531 362.862 177.721 362.862 176.721  c
362.862 175.762 363.123 174.973 363.644 174.354  c
364.164 173.734 364.831 173.424 365.644 173.424  c
366.414 173.424 367.008 173.697 367.425 174.244  c
367.841 174.791 368.050 175.570 368.050 176.580  c
368.050 176.939 l
364.034 176.939 l
364.201 178.450 364.940 179.205 366.253 179.205  c
366.732 179.205 367.321 179.075 368.019 178.814  c
368.019 179.736 l
h
364.081 176.064 m
366.894 176.064 l
366.894 174.887 366.451 174.299 365.565 174.299  c
364.680 174.299 364.185 174.887 364.081 176.064  c
h
369.407 179.939 m
371.829 176.658 l
369.485 173.580 l
370.845 173.580 l
372.704 176.018 l
374.392 173.580 l
375.517 173.580 l
373.313 176.799 l
375.704 179.939 l
374.329 179.939 l
372.423 177.424 l
370.563 179.939 l
369.407 179.939 l
h
f
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
147.999 284.000 m
302.019 284.000 l
S
newpath
139.999 284.000 m
151.999 289.000 l
148.999 284.000 l
151.999 279.000 l
h
f
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
201.169 299.402 m
201.169 290.730 l
203.794 290.730 l
204.627 290.730 205.265 290.913 205.708 291.277  c
206.151 291.642 206.372 292.178 206.372 292.887  c
206.372 294.043 205.789 294.861 204.622 295.340  c
207.513 299.402 l
205.997 299.402 l
203.528 295.730 l
202.388 295.730 l
202.388 299.402 l
201.169 299.402 l
h
202.388 294.809 m
202.778 294.809 l
204.330 294.809 205.106 294.204 205.106 292.996  c
205.106 292.100 204.455 291.652 203.153 291.652  c
202.388 291.652 l
202.388 294.809 l
h
213.444 299.199 m
212.674 299.428 212.012 299.543 211.460 299.543  c
210.522 299.543 209.759 299.233 209.171 298.613  c
208.582 297.993 208.288 297.184 208.288 296.184  c
208.288 295.225 208.549 294.436 209.069 293.816  c
209.590 293.197 210.257 292.887 211.069 292.887  c
211.840 292.887 212.434 293.160 212.851 293.707  c
213.267 294.254 213.476 295.033 213.476 296.043  c
213.476 296.402 l
209.460 296.402 l
209.627 297.913 210.366 298.668 211.679 298.668  c
212.158 298.668 212.746 298.538 213.444 298.277  c
213.444 299.199 l
h
209.507 295.527 m
212.319 295.527 l
212.319 294.350 211.877 293.762 210.991 293.762  c
210.106 293.762 209.611 294.350 209.507 295.527  c
h
217.161 299.543 m
216.630 299.543 215.989 299.423 215.239 299.184  c
215.239 298.121 l
215.989 298.496 216.646 298.684 217.208 298.684  c
217.541 298.684 217.817 298.592 218.036 298.410  c
218.255 298.228 218.364 298.001 218.364 297.730  c
218.364 297.345 218.057 297.022 217.442 296.762  c
216.771 296.465 l
215.771 296.059 215.271 295.465 215.271 294.684  c
215.271 294.132 215.468 293.697 215.864 293.379  c
216.260 293.061 216.797 292.902 217.474 292.902  c
217.828 292.902 218.271 292.949 218.802 293.043  c
219.036 293.090 l
219.036 294.059 l
218.390 293.861 217.880 293.762 217.505 293.762  c
216.755 293.762 216.380 294.033 216.380 294.574  c
216.380 294.918 216.661 295.210 217.224 295.449  c
217.786 295.684 l
218.411 295.954 218.856 296.236 219.122 296.527  c
219.388 296.819 219.521 297.189 219.521 297.637  c
219.521 298.189 219.299 298.645 218.856 299.004  c
218.414 299.363 217.849 299.543 217.161 299.543  c
h
225.575 299.402 m
225.575 298.199 l
224.961 299.095 224.216 299.543 223.341 299.543  c
222.778 299.543 222.333 299.368 222.005 299.020  c
221.677 298.671 221.513 298.199 221.513 297.605  c
221.513 293.043 l
222.669 293.043 l
222.669 297.230 l
222.669 297.710 222.739 298.051 222.880 298.254  c
223.021 298.457 223.252 298.559 223.575 298.559  c
224.284 298.559 224.950 298.095 225.575 297.168  c
225.575 293.043 l
226.716 293.043 l
226.716 299.402 l
225.575 299.402 l
h
229.038 299.402 m
229.038 290.152 l
230.194 290.152 l
230.194 299.402 l
229.038 299.402 l
h
234.413 299.543 m
233.830 299.543 233.374 299.376 233.046 299.043  c
232.718 298.710 232.554 298.241 232.554 297.637  c
232.554 293.902 l
231.757 293.902 l
231.757 293.043 l
232.554 293.043 l
232.554 291.887 l
233.710 291.777 l
233.710 293.043 l
235.366 293.043 l
235.366 293.902 l
233.710 293.902 l
233.710 297.434 l
233.710 298.267 234.069 298.684 234.788 298.684  c
234.934 298.684 235.116 298.658 235.335 298.605  c
235.335 299.402 l
234.981 299.496 234.674 299.543 234.413 299.543  c
h
238.683 299.543 m
238.151 299.543 237.511 299.423 236.761 299.184  c
236.761 298.121 l
237.511 298.496 238.167 298.684 238.729 298.684  c
239.063 298.684 239.339 298.592 239.558 298.410  c
239.776 298.228 239.886 298.001 239.886 297.730  c
239.886 297.345 239.578 297.022 238.964 296.762  c
238.292 296.465 l
237.292 296.059 236.792 295.465 236.792 294.684  c
236.792 294.132 236.990 293.697 237.386 293.379  c
237.782 293.061 238.318 292.902 238.995 292.902  c
239.349 292.902 239.792 292.949 240.323 293.043  c
240.558 293.090 l
240.558 294.059 l
239.912 293.861 239.401 293.762 239.026 293.762  c
238.276 293.762 237.901 294.033 237.901 294.574  c
237.901 294.918 238.183 295.210 238.745 295.449  c
239.308 295.684 l
239.933 295.954 240.378 296.236 240.644 296.527  c
240.909 296.819 241.042 297.189 241.042 297.637  c
241.042 298.189 240.821 298.645 240.378 299.004  c
239.935 299.363 239.370 299.543 238.683 299.543  c
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
294.014 319.000 m
139.973 319.000 l
S
newpath
302.014 319.000 m
290.014 314.000 l
293.014 319.000 l
290.014 324.000 l
h
f
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
212.495 336.137 m
211.141 335.699 210.000 335.173 209.073 334.559  c
208.709 334.600 208.427 334.621 208.229 334.621  c
207.063 334.621 206.115 334.199 205.386 333.355  c
204.657 332.512 204.292 331.413 204.292 330.059  c
204.292 328.684 204.659 327.582 205.394 326.754  c
206.128 325.926 207.115 325.512 208.354 325.512  c
209.584 325.512 210.565 325.926 211.300 326.754  c
212.034 327.582 212.401 328.694 212.401 330.090  c
212.401 332.079 211.662 333.454 210.183 334.215  c
211.183 334.652 212.214 334.965 213.276 335.152  c
212.495 336.137 l
h
208.308 333.699 m
209.193 333.699 209.878 333.382 210.362 332.746  c
210.847 332.111 211.089 331.210 211.089 330.043  c
211.089 328.918 210.847 328.035 210.362 327.395  c
209.878 326.754 209.209 326.434 208.354 326.434  c
207.490 326.434 206.815 326.754 206.331 327.395  c
205.847 328.035 205.604 328.923 205.604 330.059  c
205.604 331.184 205.844 332.072 206.323 332.723  c
206.802 333.374 207.464 333.699 208.308 333.699  c
h
218.146 334.402 m
218.146 333.199 l
217.531 334.095 216.786 334.543 215.911 334.543  c
215.349 334.543 214.903 334.368 214.575 334.020  c
214.247 333.671 214.083 333.199 214.083 332.605  c
214.083 328.043 l
215.239 328.043 l
215.239 332.230 l
215.239 332.710 215.310 333.051 215.450 333.254  c
215.591 333.457 215.823 333.559 216.146 333.559  c
216.854 333.559 217.521 333.095 218.146 332.168  c
218.146 328.043 l
219.286 328.043 l
219.286 334.402 l
218.146 334.402 l
h
226.265 334.199 m
225.494 334.428 224.832 334.543 224.280 334.543  c
223.343 334.543 222.580 334.233 221.991 333.613  c
221.403 332.993 221.108 332.184 221.108 331.184  c
221.108 330.225 221.369 329.436 221.890 328.816  c
222.410 328.197 223.077 327.887 223.890 327.887  c
224.660 327.887 225.254 328.160 225.671 328.707  c
226.088 329.254 226.296 330.033 226.296 331.043  c
226.296 331.402 l
222.280 331.402 l
222.447 332.913 223.187 333.668 224.499 333.668  c
224.978 333.668 225.567 333.538 226.265 333.277  c
226.265 334.199 l
h
222.327 330.527 m
225.140 330.527 l
225.140 329.350 224.697 328.762 223.812 328.762  c
222.926 328.762 222.431 329.350 222.327 330.527  c
h
228.294 334.402 m
228.294 328.043 l
229.450 328.043 l
229.450 329.230 l
229.909 328.345 230.570 327.902 231.435 327.902  c
231.560 327.902 231.685 327.913 231.810 327.934  c
231.810 329.012 l
231.612 328.939 231.435 328.902 231.278 328.902  c
230.549 328.902 229.940 329.335 229.450 330.199  c
229.450 334.402 l
228.294 334.402 l
h
233.579 336.715 m
234.610 334.402 l
232.142 328.043 l
233.392 328.043 l
235.220 332.824 l
237.157 328.043 l
238.251 328.043 l
234.767 336.715 l
233.579 336.715 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
360.000 336.500 m
360.000 365.731 l
S
newpath
360.000 373.731 m
365.000 361.731 l
360.000 364.731 l
355.000 361.731 l
h
f
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
365.125 359.537 m
365.125 350.865 l
368.000 350.865 l
368.865 350.865 369.560 350.961 370.086 351.154  c
370.612 351.346 371.068 351.672 371.453 352.130  c
372.068 352.849 372.375 353.802 372.375 354.990  c
372.375 356.438 371.995 357.557 371.234 358.349  c
370.474 359.141 369.401 359.537 368.016 359.537  c
365.125 359.537 l
h
366.344 358.615 m
367.922 358.615 l
369.047 358.615 369.844 358.313 370.312 357.708  c
370.823 357.063 371.078 356.198 371.078 355.115  c
371.078 354.094 370.828 353.292 370.328 352.708  c
370.026 352.354 369.667 352.112 369.250 351.982  c
368.833 351.852 368.203 351.787 367.359 351.787  c
366.344 351.787 l
366.344 358.615 l
h
378.801 359.333 m
378.030 359.563 377.368 359.677 376.816 359.677  c
375.879 359.677 375.116 359.367 374.527 358.747  c
373.939 358.128 373.645 357.318 373.645 356.318  c
373.645 355.359 373.905 354.570 374.426 353.951  c
374.947 353.331 375.613 353.021 376.426 353.021  c
377.197 353.021 377.790 353.294 378.207 353.841  c
378.624 354.388 378.832 355.167 378.832 356.177  c
378.832 356.537 l
374.816 356.537 l
374.983 358.047 375.723 358.802 377.035 358.802  c
377.514 358.802 378.103 358.672 378.801 358.412  c
378.801 359.333 l
h
374.863 355.662 m
377.676 355.662 l
377.676 354.484 377.233 353.896 376.348 353.896  c
375.462 353.896 374.967 354.484 374.863 355.662  c
h
380.830 359.537 m
380.830 350.287 l
381.986 350.287 l
381.986 359.537 l
380.830 359.537 l
h
388.955 359.333 m
388.184 359.563 387.523 359.677 386.971 359.677  c
386.033 359.677 385.270 359.367 384.682 358.747  c
384.093 358.128 383.799 357.318 383.799 356.318  c
383.799 355.359 384.059 354.570 384.580 353.951  c
385.101 353.331 385.768 353.021 386.580 353.021  c
387.351 353.021 387.945 353.294 388.361 353.841  c
388.778 354.388 388.986 355.167 388.986 356.177  c
388.986 356.537 l
384.971 356.537 l
385.137 358.047 385.877 358.802 387.189 358.802  c
387.669 358.802 388.257 358.672 388.955 358.412  c
388.955 359.333 l
h
385.018 355.662 m
387.830 355.662 l
387.830 354.484 387.387 353.896 386.502 353.896  c
385.617 353.896 385.122 354.484 385.018 355.662  c
h
392.891 359.677 m
392.307 359.677 391.852 359.510 391.523 359.177  c
391.195 358.844 391.031 358.375 391.031 357.771  c
391.031 354.037 l
390.234 354.037 l
390.234 353.177 l
391.031 353.177 l
391.031 352.021 l
392.188 351.912 l
392.188 353.177 l
393.844 353.177 l
393.844 354.037 l
392.188 354.037 l
392.188 357.568 l
392.188 358.401 392.547 358.818 393.266 358.818  c
393.411 358.818 393.594 358.792 393.812 358.740  c
393.812 359.537 l
393.458 359.630 393.151 359.677 392.891 359.677  c
h
395.473 359.537 m
395.473 353.177 l
396.629 353.177 l
396.629 359.537 l
395.473 359.537 l
h
395.473 352.021 m
395.473 350.865 l
396.629 350.865 l
396.629 352.021 l
395.473 352.021 l
h
401.426 359.677 m
400.520 359.677 399.796 359.375 399.254 358.771  c
398.712 358.167 398.441 357.359 398.441 356.349  c
398.441 355.328 398.712 354.521 399.254 353.927  c
399.796 353.333 400.535 353.037 401.473 353.037  c
402.410 353.037 403.150 353.333 403.691 353.927  c
404.233 354.521 404.504 355.328 404.504 356.349  c
404.504 357.380 404.230 358.193 403.684 358.787  c
403.137 359.380 402.384 359.677 401.426 359.677  c
h
401.441 358.818 m
402.671 358.818 403.285 357.995 403.285 356.349  c
403.285 354.714 402.681 353.896 401.473 353.896  c
400.264 353.896 399.660 354.714 399.660 356.349  c
399.660 357.995 400.254 358.818 401.441 358.818  c
h
406.312 359.537 m
406.312 353.177 l
407.469 353.177 l
407.469 354.365 l
408.073 353.479 408.818 353.037 409.703 353.037  c
410.255 353.037 410.695 353.211 411.023 353.560  c
411.352 353.909 411.516 354.375 411.516 354.958  c
411.516 359.537 l
410.359 359.537 l
410.359 355.333 l
410.359 354.865 410.289 354.529 410.148 354.326  c
410.008 354.122 409.781 354.021 409.469 354.021  c
408.760 354.021 408.094 354.484 407.469 355.412  c
407.469 359.537 l
406.312 359.537 l
h
415.447 359.677 m
414.916 359.677 414.275 359.557 413.525 359.318  c
413.525 358.255 l
414.275 358.630 414.932 358.818 415.494 358.818  c
415.827 358.818 416.104 358.727 416.322 358.544  c
416.541 358.362 416.650 358.135 416.650 357.865  c
416.650 357.479 416.343 357.156 415.729 356.896  c
415.057 356.599 l
414.057 356.193 413.557 355.599 413.557 354.818  c
413.557 354.266 413.755 353.831 414.150 353.513  c
414.546 353.195 415.083 353.037 415.760 353.037  c
416.114 353.037 416.557 353.083 417.088 353.177  c
417.322 353.224 l
417.322 354.193 l
416.676 353.995 416.166 353.896 415.791 353.896  c
415.041 353.896 414.666 354.167 414.666 354.708  c
414.666 355.052 414.947 355.344 415.510 355.583  c
416.072 355.818 l
416.697 356.089 417.143 356.370 417.408 356.662  c
417.674 356.953 417.807 357.323 417.807 357.771  c
417.807 358.323 417.585 358.779 417.143 359.138  c
416.700 359.497 416.135 359.677 415.447 359.677  c
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
newpath
360.000 231.489 m
360.000 263.500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
426.000 300.000 m
499.029 300.000 l
S
newpath
418.000 300.000 m
430.000 305.000 l
427.000 300.000 l
430.000 295.000 l
h
f
2 J
1.60000 M
0 J
1.45000 M
newpath
436.164 312.090 m
434.680 308.340 l
433.211 312.090 l
436.164 312.090 l
h
437.461 315.402 m
436.523 312.996 l
432.851 312.996 l
431.898 315.402 l
430.742 315.402 l
434.195 306.730 l
435.414 306.730 l
438.789 315.402 l
437.461 315.402 l
h
444.162 315.402 m
444.162 314.199 l
443.693 315.095 442.990 315.543 442.053 315.543  c
441.282 315.543 440.678 315.264 440.240 314.707  c
439.803 314.150 439.584 313.387 439.584 312.418  c
439.584 311.355 439.831 310.504 440.326 309.863  c
440.821 309.223 441.474 308.902 442.287 308.902  c
443.047 308.902 443.672 309.189 444.162 309.762  c
444.162 306.152 l
445.334 306.152 l
445.334 315.402 l
444.162 315.402 l
h
444.162 310.559 m
443.568 310.027 443.006 309.762 442.474 309.762  c
441.360 309.762 440.803 310.611 440.803 312.309  c
440.803 313.788 441.297 314.527 442.287 314.527  c
442.922 314.527 443.547 314.178 444.162 313.480  c
444.162 310.559 l
h
451.715 315.402 m
451.715 314.199 l
451.246 315.095 450.543 315.543 449.605 315.543  c
448.835 315.543 448.230 315.264 447.793 314.707  c
447.355 314.150 447.137 313.387 447.137 312.418  c
447.137 311.355 447.384 310.504 447.879 309.863  c
448.374 309.223 449.027 308.902 449.840 308.902  c
450.600 308.902 451.225 309.189 451.715 309.762  c
451.715 306.152 l
452.887 306.152 l
452.887 315.402 l
451.715 315.402 l
h
451.715 310.559 m
451.121 310.027 450.558 309.762 450.027 309.762  c
448.913 309.762 448.355 310.611 448.355 312.309  c
448.355 313.788 448.850 314.527 449.840 314.527  c
450.475 314.527 451.100 314.178 451.715 313.480  c
451.715 310.559 l
h
455.189 315.402 m
455.189 309.043 l
456.346 309.043 l
456.346 315.402 l
455.189 315.402 l
h
455.189 307.887 m
455.189 306.730 l
456.346 306.730 l
456.346 307.887 l
455.189 307.887 l
h
460.564 315.543 m
459.981 315.543 459.525 315.376 459.197 315.043  c
458.869 314.710 458.705 314.241 458.705 313.637  c
458.705 309.902 l
457.908 309.902 l
457.908 309.043 l
458.705 309.043 l
458.705 307.887 l
459.861 307.777 l
459.861 309.043 l
461.517 309.043 l
461.517 309.902 l
459.861 309.902 l
459.861 313.434 l
459.861 314.267 460.221 314.684 460.939 314.684  c
461.085 314.684 461.267 314.658 461.486 314.605  c
461.486 315.402 l
461.132 315.496 460.825 315.543 460.564 315.543  c
h
463.146 315.402 m
463.146 309.043 l
464.303 309.043 l
464.303 315.402 l
463.146 315.402 l
h
463.146 307.887 m
463.146 306.730 l
464.303 306.730 l
464.303 307.887 l
463.146 307.887 l
h
469.099 315.543 m
468.193 315.543 467.469 315.241 466.928 314.637  c
466.386 314.033 466.115 313.225 466.115 312.215  c
466.115 311.194 466.386 310.387 466.928 309.793  c
467.469 309.199 468.209 308.902 469.146 308.902  c
470.084 308.902 470.823 309.199 471.365 309.793  c
471.907 310.387 472.178 311.194 472.178 312.215  c
472.178 313.246 471.904 314.059 471.357 314.652  c
470.810 315.246 470.058 315.543 469.099 315.543  c
h
469.115 314.684 m
470.344 314.684 470.959 313.861 470.959 312.215  c
470.959 310.579 470.355 309.762 469.146 309.762  c
467.938 309.762 467.334 310.579 467.334 312.215  c
467.334 313.861 467.928 314.684 469.115 314.684  c
h
473.986 315.402 m
473.986 309.043 l
475.142 309.043 l
475.142 310.230 l
475.747 309.345 476.491 308.902 477.377 308.902  c
477.929 308.902 478.369 309.077 478.697 309.426  c
479.025 309.775 479.189 310.241 479.189 310.824  c
479.189 315.402 l
478.033 315.402 l
478.033 311.199 l
478.033 310.730 477.963 310.395 477.822 310.191  c
477.682 309.988 477.455 309.887 477.142 309.887  c
476.434 309.887 475.767 310.350 475.142 311.277  c
475.142 315.402 l
473.986 315.402 l
h
483.121 315.543 m
482.590 315.543 481.949 315.423 481.199 315.184  c
481.199 314.121 l
481.949 314.496 482.605 314.684 483.168 314.684  c
483.501 314.684 483.777 314.592 483.996 314.410  c
484.215 314.228 484.324 314.001 484.324 313.730  c
484.324 313.345 484.017 313.022 483.402 312.762  c
482.730 312.465 l
481.730 312.059 481.230 311.465 481.230 310.684  c
481.230 310.132 481.428 309.697 481.824 309.379  c
482.220 309.061 482.756 308.902 483.433 308.902  c
483.788 308.902 484.230 308.949 484.762 309.043  c
484.996 309.090 l
484.996 310.059 l
484.350 309.861 483.840 309.762 483.465 309.762  c
482.715 309.762 482.340 310.033 482.340 310.574  c
482.340 310.918 482.621 311.210 483.183 311.449  c
483.746 311.684 l
484.371 311.954 484.816 312.236 485.082 312.527  c
485.348 312.819 485.480 313.189 485.480 313.637  c
485.480 314.189 485.259 314.645 484.816 315.004  c
484.374 315.363 483.808 315.543 483.121 315.543  c
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
