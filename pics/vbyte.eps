%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 351 575 440
%%Creator: yExport 1.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, November 3, 2010 9:54:26 PM GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
888 141 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
888.000 0.00000 l
888.000 141.000 l
0.00000 141.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 888 141 rc
q
[ 1.38224 0.00000 0.00000 1.38224 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 29.0000 -60.0000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-29.0000 60.0000 m
614.000 60.0000 l
614.000 163.000 l
-29.0000 163.000 l
-29.0000 60.0000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.38224 0.00000 0.00000 1.38224 40.0849 -82.9344 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.38224 0.00000 0.00000 1.38224 40.0849 -82.9344 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.38224 0.00000 0.00000 1.38224 40.0849 -82.9344 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
204.596 95.2917 m
203.481 95.2917 202.577 94.7657 201.885 93.7136  c
201.192 92.6615 200.846 91.2917 200.846 89.6042  c
200.846 87.8959 201.195 86.5209 201.893 85.4792  c
202.590 84.4376 203.507 83.9167 204.643 83.9167  c
205.778 83.9167 206.695 84.4376 207.393 85.4792  c
208.090 86.5209 208.439 87.8855 208.439 89.5730  c
208.439 91.3126 208.090 92.7006 207.393 93.7371  c
206.695 94.7735 205.762 95.2917 204.596 95.2917  c
h
204.611 94.2136 m
206.143 94.2136 206.908 92.6615 206.908 89.5574  c
206.908 86.5157 206.153 84.9949 204.643 84.9949  c
203.132 84.9949 202.377 86.5313 202.377 89.6042  c
202.377 92.6772 203.122 94.2136 204.611 94.2136  c
h
214.081 95.2917 m
212.966 95.2917 212.062 94.7657 211.370 93.7136  c
210.677 92.6615 210.331 91.2917 210.331 89.6042  c
210.331 87.8959 210.680 86.5209 211.377 85.4792  c
212.075 84.4376 212.992 83.9167 214.127 83.9167  c
215.263 83.9167 216.180 84.4376 216.877 85.4792  c
217.575 86.5209 217.924 87.8855 217.924 89.5730  c
217.924 91.3126 217.575 92.7006 216.877 93.7371  c
216.180 94.7735 215.247 95.2917 214.081 95.2917  c
h
214.096 94.2136 m
215.627 94.2136 216.393 92.6615 216.393 89.5574  c
216.393 86.5157 215.638 84.9949 214.127 84.9949  c
212.617 84.9949 211.862 86.5313 211.862 89.6042  c
211.862 92.6772 212.607 94.2136 214.096 94.2136  c
h
223.565 95.2917 m
222.451 95.2917 221.547 94.7657 220.854 93.7136  c
220.162 92.6615 219.815 91.2917 219.815 89.6042  c
219.815 87.8959 220.164 86.5209 220.862 85.4792  c
221.560 84.4376 222.477 83.9167 223.612 83.9167  c
224.748 83.9167 225.664 84.4376 226.362 85.4792  c
227.060 86.5209 227.409 87.8855 227.409 89.5730  c
227.409 91.3126 227.060 92.7006 226.362 93.7371  c
225.664 94.7735 224.732 95.2917 223.565 95.2917  c
h
223.581 94.2136 m
225.112 94.2136 225.878 92.6615 225.878 89.5574  c
225.878 86.5157 225.123 84.9949 223.612 84.9949  c
222.102 84.9949 221.347 86.5313 221.347 89.6042  c
221.347 92.6772 222.091 94.2136 223.581 94.2136  c
h
233.050 95.2917 m
231.936 95.2917 231.032 94.7657 230.339 93.7136  c
229.647 92.6615 229.300 91.2917 229.300 89.6042  c
229.300 87.8959 229.649 86.5209 230.347 85.4792  c
231.045 84.4376 231.962 83.9167 233.097 83.9167  c
234.233 83.9167 235.149 84.4376 235.847 85.4792  c
236.545 86.5209 236.894 87.8855 236.894 89.5730  c
236.894 91.3126 236.545 92.7006 235.847 93.7371  c
235.149 94.7735 234.217 95.2917 233.050 95.2917  c
h
233.066 94.2136 m
234.597 94.2136 235.363 92.6615 235.363 89.5574  c
235.363 86.5157 234.608 84.9949 233.097 84.9949  c
231.587 84.9949 230.832 86.5313 230.832 89.6042  c
230.832 92.6772 231.576 94.2136 233.066 94.2136  c
h
247.281 95.2917 m
246.167 95.2917 245.263 94.7657 244.570 93.7136  c
243.878 92.6615 243.531 91.2917 243.531 89.6042  c
243.531 87.8959 243.880 86.5209 244.578 85.4792  c
245.276 84.4376 246.193 83.9167 247.328 83.9167  c
248.464 83.9167 249.380 84.4376 250.078 85.4792  c
250.776 86.5209 251.125 87.8855 251.125 89.5730  c
251.125 91.3126 250.776 92.7006 250.078 93.7371  c
249.380 94.7735 248.448 95.2917 247.281 95.2917  c
h
247.297 94.2136 m
248.828 94.2136 249.594 92.6615 249.594 89.5574  c
249.594 86.5157 248.839 84.9949 247.328 84.9949  c
245.818 84.9949 245.062 86.5313 245.062 89.6042  c
245.062 92.6772 245.807 94.2136 247.297 94.2136  c
h
256.766 95.2917 m
255.652 95.2917 254.748 94.7657 254.055 93.7136  c
253.362 92.6615 253.016 91.2917 253.016 89.6042  c
253.016 87.8959 253.365 86.5209 254.063 85.4792  c
254.761 84.4376 255.678 83.9167 256.813 83.9167  c
257.948 83.9167 258.865 84.4376 259.563 85.4792  c
260.261 86.5209 260.610 87.8855 260.610 89.5730  c
260.610 91.3126 260.261 92.7006 259.563 93.7371  c
258.865 94.7735 257.933 95.2917 256.766 95.2917  c
h
256.782 94.2136 m
258.313 94.2136 259.079 92.6615 259.079 89.5574  c
259.079 86.5157 258.323 84.9949 256.813 84.9949  c
255.303 84.9949 254.547 86.5313 254.547 89.6042  c
254.547 92.6772 255.292 94.2136 256.782 94.2136  c
h
266.251 95.2917 m
265.136 95.2917 264.233 94.7657 263.540 93.7136  c
262.847 92.6615 262.501 91.2917 262.501 89.6042  c
262.501 87.8959 262.850 86.5209 263.548 85.4792  c
264.246 84.4376 265.162 83.9167 266.298 83.9167  c
267.433 83.9167 268.350 84.4376 269.048 85.4792  c
269.746 86.5209 270.095 87.8855 270.095 89.5730  c
270.095 91.3126 269.746 92.7006 269.048 93.7371  c
268.350 94.7735 267.418 95.2917 266.251 95.2917  c
h
266.267 94.2136 m
267.798 94.2136 268.563 92.6615 268.563 89.5574  c
268.563 86.5157 267.808 84.9949 266.298 84.9949  c
264.787 84.9949 264.032 86.5313 264.032 89.6042  c
264.032 92.6772 264.777 94.2136 266.267 94.2136  c
h
275.736 95.2917 m
274.621 95.2917 273.718 94.7657 273.025 93.7136  c
272.332 92.6615 271.986 91.2917 271.986 89.6042  c
271.986 87.8959 272.335 86.5209 273.033 85.4792  c
273.731 84.4376 274.647 83.9167 275.783 83.9167  c
276.918 83.9167 277.835 84.4376 278.533 85.4792  c
279.231 86.5209 279.580 87.8855 279.580 89.5730  c
279.580 91.3126 279.231 92.7006 278.533 93.7371  c
277.835 94.7735 276.903 95.2917 275.736 95.2917  c
h
275.751 94.2136 m
277.283 94.2136 278.048 92.6615 278.048 89.5574  c
278.048 86.5157 277.293 84.9949 275.783 84.9949  c
274.272 84.9949 273.517 86.5313 273.517 89.6042  c
273.517 92.6772 274.262 94.2136 275.751 94.2136  c
h
299.459 95.2917 m
298.344 95.2917 297.441 94.7657 296.748 93.7136  c
296.055 92.6615 295.709 91.2917 295.709 89.6042  c
295.709 87.8959 296.058 86.5209 296.756 85.4792  c
297.454 84.4376 298.370 83.9167 299.506 83.9167  c
300.641 83.9167 301.558 84.4376 302.256 85.4792  c
302.954 86.5209 303.303 87.8855 303.303 89.5730  c
303.303 91.3126 302.954 92.7006 302.256 93.7371  c
301.558 94.7735 300.626 95.2917 299.459 95.2917  c
h
299.475 94.2136 m
301.006 94.2136 301.771 92.6615 301.771 89.5574  c
301.771 86.5157 301.016 84.9949 299.506 84.9949  c
297.995 84.9949 297.240 86.5313 297.240 89.6042  c
297.240 92.6772 297.985 94.2136 299.475 94.2136  c
h
308.944 95.2917 m
307.829 95.2917 306.926 94.7657 306.233 93.7136  c
305.540 92.6615 305.194 91.2917 305.194 89.6042  c
305.194 87.8959 305.543 86.5209 306.241 85.4792  c
306.939 84.4376 307.855 83.9167 308.991 83.9167  c
310.126 83.9167 311.043 84.4376 311.741 85.4792  c
312.439 86.5209 312.788 87.8855 312.788 89.5730  c
312.788 91.3126 312.439 92.7006 311.741 93.7371  c
311.043 94.7735 310.111 95.2917 308.944 95.2917  c
h
308.959 94.2136 m
310.491 94.2136 311.256 92.6615 311.256 89.5574  c
311.256 86.5157 310.501 84.9949 308.991 84.9949  c
307.480 84.9949 306.725 86.5313 306.725 89.6042  c
306.725 92.6772 307.470 94.2136 308.959 94.2136  c
h
318.429 95.2917 m
317.314 95.2917 316.410 94.7657 315.718 93.7136  c
315.025 92.6615 314.679 91.2917 314.679 89.6042  c
314.679 87.8959 315.028 86.5209 315.726 85.4792  c
316.424 84.4376 317.340 83.9167 318.476 83.9167  c
319.611 83.9167 320.528 84.4376 321.226 85.4792  c
321.924 86.5209 322.272 87.8855 322.272 89.5730  c
322.272 91.3126 321.924 92.7006 321.226 93.7371  c
320.528 94.7735 319.595 95.2917 318.429 95.2917  c
h
318.444 94.2136 m
319.976 94.2136 320.741 92.6615 320.741 89.5574  c
320.741 86.5157 319.986 84.9949 318.476 84.9949  c
316.965 84.9949 316.210 86.5313 316.210 89.6042  c
316.210 92.6772 316.955 94.2136 318.444 94.2136  c
h
327.914 95.2917 m
326.799 95.2917 325.895 94.7657 325.203 93.7136  c
324.510 92.6615 324.164 91.2917 324.164 89.6042  c
324.164 87.8959 324.513 86.5209 325.210 85.4792  c
325.908 84.4376 326.825 83.9167 327.960 83.9167  c
329.096 83.9167 330.013 84.4376 330.710 85.4792  c
331.408 86.5209 331.757 87.8855 331.757 89.5730  c
331.757 91.3126 331.408 92.7006 330.710 93.7371  c
330.013 94.7735 329.080 95.2917 327.914 95.2917  c
h
327.929 94.2136 m
329.460 94.2136 330.226 92.6615 330.226 89.5574  c
330.226 86.5157 329.471 84.9949 327.960 84.9949  c
326.450 84.9949 325.695 86.5313 325.695 89.6042  c
325.695 92.6772 326.440 94.2136 327.929 94.2136  c
h
342.145 95.2917 m
341.030 95.2917 340.126 94.7657 339.434 93.7136  c
338.741 92.6615 338.395 91.2917 338.395 89.6042  c
338.395 87.8959 338.743 86.5209 339.441 85.4792  c
340.139 84.4376 341.056 83.9167 342.191 83.9167  c
343.327 83.9167 344.243 84.4376 344.941 85.4792  c
345.639 86.5209 345.988 87.8855 345.988 89.5730  c
345.988 91.3126 345.639 92.7006 344.941 93.7371  c
344.243 94.7735 343.311 95.2917 342.145 95.2917  c
h
342.160 94.2136 m
343.691 94.2136 344.457 92.6615 344.457 89.5574  c
344.457 86.5157 343.702 84.9949 342.191 84.9949  c
340.681 84.9949 339.926 86.5313 339.926 89.6042  c
339.926 92.6772 340.671 94.2136 342.160 94.2136  c
h
351.629 95.2917 m
350.515 95.2917 349.611 94.7657 348.918 93.7136  c
348.226 92.6615 347.879 91.2917 347.879 89.6042  c
347.879 87.8959 348.228 86.5209 348.926 85.4792  c
349.624 84.4376 350.541 83.9167 351.676 83.9167  c
352.812 83.9167 353.728 84.4376 354.426 85.4792  c
355.124 86.5209 355.473 87.8855 355.473 89.5730  c
355.473 91.3126 355.124 92.7006 354.426 93.7371  c
353.728 94.7735 352.796 95.2917 351.629 95.2917  c
h
351.645 94.2136 m
353.176 94.2136 353.942 92.6615 353.942 89.5574  c
353.942 86.5157 353.187 84.9949 351.676 84.9949  c
350.166 84.9949 349.411 86.5313 349.411 89.6042  c
349.411 92.6772 350.155 94.2136 351.645 94.2136  c
h
361.114 95.2917 m
360.000 95.2917 359.096 94.7657 358.403 93.7136  c
357.711 92.6615 357.364 91.2917 357.364 89.6042  c
357.364 87.8959 357.713 86.5209 358.411 85.4792  c
359.109 84.4376 360.026 83.9167 361.161 83.9167  c
362.297 83.9167 363.213 84.4376 363.911 85.4792  c
364.609 86.5209 364.958 87.8855 364.958 89.5730  c
364.958 91.3126 364.609 92.7006 363.911 93.7371  c
363.213 94.7735 362.281 95.2917 361.114 95.2917  c
h
361.130 94.2136 m
362.661 94.2136 363.427 92.6615 363.427 89.5574  c
363.427 86.5157 362.672 84.9949 361.161 84.9949  c
359.651 84.9949 358.896 86.5313 358.896 89.6042  c
358.896 92.6772 359.640 94.2136 361.130 94.2136  c
h
370.599 95.2917 m
369.485 95.2917 368.581 94.7657 367.888 93.7136  c
367.195 92.6615 366.849 91.2917 366.849 89.6042  c
366.849 87.8959 367.198 86.5209 367.896 85.4792  c
368.594 84.4376 369.511 83.9167 370.646 83.9167  c
371.781 83.9167 372.698 84.4376 373.396 85.4792  c
374.094 86.5209 374.443 87.8855 374.443 89.5730  c
374.443 91.3126 374.094 92.7006 373.396 93.7371  c
372.698 94.7735 371.766 95.2917 370.599 95.2917  c
h
370.615 94.2136 m
372.146 94.2136 372.912 92.6615 372.912 89.5574  c
372.912 86.5157 372.156 84.9949 370.646 84.9949  c
369.136 84.9949 368.380 86.5313 368.380 89.6042  c
368.380 92.6772 369.125 94.2136 370.615 94.2136  c
h
394.322 95.2917 m
393.208 95.2917 392.304 94.7657 391.611 93.7136  c
390.919 92.6615 390.572 91.2917 390.572 89.6042  c
390.572 87.8959 390.921 86.5209 391.619 85.4792  c
392.317 84.4376 393.234 83.9167 394.369 83.9167  c
395.505 83.9167 396.421 84.4376 397.119 85.4792  c
397.817 86.5209 398.166 87.8855 398.166 89.5730  c
398.166 91.3126 397.817 92.7006 397.119 93.7371  c
396.421 94.7735 395.489 95.2917 394.322 95.2917  c
h
394.338 94.2136 m
395.869 94.2136 396.635 92.6615 396.635 89.5574  c
396.635 86.5157 395.880 84.9949 394.369 84.9949  c
392.859 84.9949 392.104 86.5313 392.104 89.6042  c
392.104 92.6772 392.848 94.2136 394.338 94.2136  c
h
403.807 95.2917 m
402.693 95.2917 401.789 94.7657 401.096 93.7136  c
400.403 92.6615 400.057 91.2917 400.057 89.6042  c
400.057 87.8959 400.406 86.5209 401.104 85.4792  c
401.802 84.4376 402.719 83.9167 403.854 83.9167  c
404.989 83.9167 405.906 84.4376 406.604 85.4792  c
407.302 86.5209 407.651 87.8855 407.651 89.5730  c
407.651 91.3126 407.302 92.7006 406.604 93.7371  c
405.906 94.7735 404.974 95.2917 403.807 95.2917  c
h
403.823 94.2136 m
405.354 94.2136 406.120 92.6615 406.120 89.5574  c
406.120 86.5157 405.364 84.9949 403.854 84.9949  c
402.344 84.9949 401.588 86.5313 401.588 89.6042  c
401.588 92.6772 402.333 94.2136 403.823 94.2136  c
h
413.292 95.2917 m
412.177 95.2917 411.274 94.7657 410.581 93.7136  c
409.888 92.6615 409.542 91.2917 409.542 89.6042  c
409.542 87.8959 409.891 86.5209 410.589 85.4792  c
411.287 84.4376 412.203 83.9167 413.339 83.9167  c
414.474 83.9167 415.391 84.4376 416.089 85.4792  c
416.787 86.5209 417.136 87.8855 417.136 89.5730  c
417.136 91.3126 416.787 92.7006 416.089 93.7371  c
415.391 94.7735 414.459 95.2917 413.292 95.2917  c
h
413.308 94.2136 m
414.839 94.2136 415.604 92.6615 415.604 89.5574  c
415.604 86.5157 414.849 84.9949 413.339 84.9949  c
411.828 84.9949 411.073 86.5313 411.073 89.6042  c
411.073 92.6772 411.818 94.2136 413.308 94.2136  c
h
422.777 95.2917 m
421.662 95.2917 420.759 94.7657 420.066 93.7136  c
419.373 92.6615 419.027 91.2917 419.027 89.6042  c
419.027 87.8959 419.376 86.5209 420.074 85.4792  c
420.772 84.4376 421.688 83.9167 422.824 83.9167  c
423.959 83.9167 424.876 84.4376 425.574 85.4792  c
426.272 86.5209 426.621 87.8855 426.621 89.5730  c
426.621 91.3126 426.272 92.7006 425.574 93.7371  c
424.876 94.7735 423.944 95.2917 422.777 95.2917  c
h
422.792 94.2136 m
424.324 94.2136 425.089 92.6615 425.089 89.5574  c
425.089 86.5157 424.334 84.9949 422.824 84.9949  c
421.313 84.9949 420.558 86.5313 420.558 89.6042  c
420.558 92.6772 421.303 94.2136 422.792 94.2136  c
h
434.555 95.0261 m
434.555 93.9480 l
436.727 93.9480 l
436.727 85.3855 l
434.555 85.9324 l
434.555 84.8230 l
438.180 83.9167 l
438.180 93.9480 l
440.352 93.9480 l
440.352 95.0261 l
434.555 95.0261 l
h
444.040 95.0261 m
444.040 93.9480 l
446.211 93.9480 l
446.211 85.3855 l
444.040 85.9324 l
444.040 84.8230 l
447.665 83.9167 l
447.665 93.9480 l
449.836 93.9480 l
449.836 95.0261 l
444.040 95.0261 l
h
455.978 95.2917 m
454.863 95.2917 453.959 94.7657 453.267 93.7136  c
452.574 92.6615 452.228 91.2917 452.228 89.6042  c
452.228 87.8959 452.576 86.5209 453.274 85.4792  c
453.972 84.4376 454.889 83.9167 456.024 83.9167  c
457.160 83.9167 458.076 84.4376 458.774 85.4792  c
459.472 86.5209 459.821 87.8855 459.821 89.5730  c
459.821 91.3126 459.472 92.7006 458.774 93.7371  c
458.076 94.7735 457.144 95.2917 455.978 95.2917  c
h
455.993 94.2136 m
457.524 94.2136 458.290 92.6615 458.290 89.5574  c
458.290 86.5157 457.535 84.9949 456.024 84.9949  c
454.514 84.9949 453.759 86.5313 453.759 89.6042  c
453.759 92.6772 454.504 94.2136 455.993 94.2136  c
h
465.462 95.2917 m
464.348 95.2917 463.444 94.7657 462.751 93.7136  c
462.059 92.6615 461.712 91.2917 461.712 89.6042  c
461.712 87.8959 462.061 86.5209 462.759 85.4792  c
463.457 84.4376 464.374 83.9167 465.509 83.9167  c
466.645 83.9167 467.561 84.4376 468.259 85.4792  c
468.957 86.5209 469.306 87.8855 469.306 89.5730  c
469.306 91.3126 468.957 92.7006 468.259 93.7371  c
467.561 94.7735 466.629 95.2917 465.462 95.2917  c
h
465.478 94.2136 m
467.009 94.2136 467.775 92.6615 467.775 89.5574  c
467.775 86.5157 467.020 84.9949 465.509 84.9949  c
463.999 84.9949 463.244 86.5313 463.244 89.6042  c
463.244 92.6772 463.988 94.2136 465.478 94.2136  c
h
489.186 95.2917 m
488.071 95.2917 487.167 94.7657 486.475 93.7136  c
485.782 92.6615 485.436 91.2917 485.436 89.6042  c
485.436 87.8959 485.785 86.5209 486.482 85.4792  c
487.180 84.4376 488.097 83.9167 489.232 83.9167  c
490.368 83.9167 491.285 84.4376 491.982 85.4792  c
492.680 86.5209 493.029 87.8855 493.029 89.5730  c
493.029 91.3126 492.680 92.7006 491.982 93.7371  c
491.285 94.7735 490.352 95.2917 489.186 95.2917  c
h
489.201 94.2136 m
490.732 94.2136 491.498 92.6615 491.498 89.5574  c
491.498 86.5157 490.743 84.9949 489.232 84.9949  c
487.722 84.9949 486.967 86.5313 486.967 89.6042  c
486.967 92.6772 487.712 94.2136 489.201 94.2136  c
h
498.670 95.2917 m
497.556 95.2917 496.652 94.7657 495.959 93.7136  c
495.267 92.6615 494.920 91.2917 494.920 89.6042  c
494.920 87.8959 495.269 86.5209 495.967 85.4792  c
496.665 84.4376 497.582 83.9167 498.717 83.9167  c
499.853 83.9167 500.769 84.4376 501.467 85.4792  c
502.165 86.5209 502.514 87.8855 502.514 89.5730  c
502.514 91.3126 502.165 92.7006 501.467 93.7371  c
500.769 94.7735 499.837 95.2917 498.670 95.2917  c
h
498.686 94.2136 m
500.217 94.2136 500.983 92.6615 500.983 89.5574  c
500.983 86.5157 500.228 84.9949 498.717 84.9949  c
497.207 84.9949 496.452 86.5313 496.452 89.6042  c
496.452 92.6772 497.196 94.2136 498.686 94.2136  c
h
505.702 95.0261 m
505.702 93.9480 l
507.874 93.9480 l
507.874 85.3855 l
505.702 85.9324 l
505.702 84.8230 l
509.327 83.9167 l
509.327 93.9480 l
511.499 93.9480 l
511.499 95.0261 l
505.702 95.0261 l
h
517.640 95.2917 m
516.526 95.2917 515.622 94.7657 514.929 93.7136  c
514.236 92.6615 513.890 91.2917 513.890 89.6042  c
513.890 87.8959 514.239 86.5209 514.937 85.4792  c
515.635 84.4376 516.552 83.9167 517.687 83.9167  c
518.822 83.9167 519.739 84.4376 520.437 85.4792  c
521.135 86.5209 521.484 87.8855 521.484 89.5730  c
521.484 91.3126 521.135 92.7006 520.437 93.7371  c
519.739 94.7735 518.807 95.2917 517.640 95.2917  c
h
517.656 94.2136 m
519.187 94.2136 519.953 92.6615 519.953 89.5574  c
519.953 86.5157 519.197 84.9949 517.687 84.9949  c
516.177 84.9949 515.421 86.5313 515.421 89.6042  c
515.421 92.6772 516.166 94.2136 517.656 94.2136  c
h
531.871 95.2917 m
530.757 95.2917 529.853 94.7657 529.160 93.7136  c
528.467 92.6615 528.121 91.2917 528.121 89.6042  c
528.121 87.8959 528.470 86.5209 529.168 85.4792  c
529.866 84.4376 530.783 83.9167 531.918 83.9167  c
533.053 83.9167 533.970 84.4376 534.668 85.4792  c
535.366 86.5209 535.715 87.8855 535.715 89.5730  c
535.715 91.3126 535.366 92.7006 534.668 93.7371  c
533.970 94.7735 533.038 95.2917 531.871 95.2917  c
h
531.887 94.2136 m
533.418 94.2136 534.184 92.6615 534.184 89.5574  c
534.184 86.5157 533.428 84.9949 531.918 84.9949  c
530.408 84.9949 529.652 86.5313 529.652 89.6042  c
529.652 92.6772 530.397 94.2136 531.887 94.2136  c
h
541.356 95.2917 m
540.241 95.2917 539.338 94.7657 538.645 93.7136  c
537.952 92.6615 537.606 91.2917 537.606 89.6042  c
537.606 87.8959 537.955 86.5209 538.653 85.4792  c
539.351 84.4376 540.267 83.9167 541.403 83.9167  c
542.538 83.9167 543.455 84.4376 544.153 85.4792  c
544.851 86.5209 545.200 87.8855 545.200 89.5730  c
545.200 91.3126 544.851 92.7006 544.153 93.7371  c
543.455 94.7735 542.523 95.2917 541.356 95.2917  c
h
541.372 94.2136 m
542.903 94.2136 543.668 92.6615 543.668 89.5574  c
543.668 86.5157 542.913 84.9949 541.403 84.9949  c
539.892 84.9949 539.137 86.5313 539.137 89.6042  c
539.137 92.6772 539.882 94.2136 541.372 94.2136  c
h
550.841 95.2917 m
549.726 95.2917 548.823 94.7657 548.130 93.7136  c
547.437 92.6615 547.091 91.2917 547.091 89.6042  c
547.091 87.8959 547.440 86.5209 548.138 85.4792  c
548.836 84.4376 549.752 83.9167 550.888 83.9167  c
552.023 83.9167 552.940 84.4376 553.638 85.4792  c
554.336 86.5209 554.685 87.8855 554.685 89.5730  c
554.685 91.3126 554.336 92.7006 553.638 93.7371  c
552.940 94.7735 552.007 95.2917 550.841 95.2917  c
h
550.856 94.2136 m
552.388 94.2136 553.153 92.6615 553.153 89.5574  c
553.153 86.5157 552.398 84.9949 550.888 84.9949  c
549.377 84.9949 548.622 86.5313 548.622 89.6042  c
548.622 92.6772 549.367 94.2136 550.856 94.2136  c
h
560.326 95.2917 m
559.211 95.2917 558.307 94.7657 557.615 93.7136  c
556.922 92.6615 556.576 91.2917 556.576 89.6042  c
556.576 87.8959 556.925 86.5209 557.623 85.4792  c
558.320 84.4376 559.237 83.9167 560.373 83.9167  c
561.508 83.9167 562.425 84.4376 563.123 85.4792  c
563.820 86.5209 564.169 87.8855 564.169 89.5730  c
564.169 91.3126 563.820 92.7006 563.123 93.7371  c
562.425 94.7735 561.492 95.2917 560.326 95.2917  c
h
560.341 94.2136 m
561.873 94.2136 562.638 92.6615 562.638 89.5574  c
562.638 86.5157 561.883 84.9949 560.373 84.9949  c
558.862 84.9949 558.107 86.5313 558.107 89.6042  c
558.107 92.6772 558.852 94.2136 560.341 94.2136  c
h
f
0 J
1.45000 M
newpath
181.000 69.0000 m
584.000 69.0000 l
584.000 110.000 l
181.000 110.000 l
181.000 69.0000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
124.227 95.4480 m
124.227 94.1042 l
125.258 94.5105 126.070 94.7136 126.664 94.7136  c
127.352 94.7136 127.911 94.5131 128.344 94.1121  c
128.776 93.7110 128.992 93.1876 128.992 92.5417  c
128.992 91.0209 127.924 90.2605 125.789 90.2605  c
125.227 90.2605 l
125.227 89.2917 l
125.727 89.2761 l
127.727 89.2761 128.727 88.5730 128.727 87.1667  c
128.727 86.0522 128.070 85.4949 126.758 85.4949  c
126.029 85.4949 125.232 85.6980 124.367 86.1042  c
124.367 84.8542 l
125.221 84.5626 126.049 84.4167 126.852 84.4167  c
129.070 84.4167 130.180 85.2553 130.180 86.9324  c
130.180 88.2032 129.424 89.1095 127.914 89.6511  c
129.664 90.0574 130.539 91.0157 130.539 92.5261  c
130.539 93.5470 130.203 94.3464 129.531 94.9246  c
128.859 95.5027 127.935 95.7917 126.758 95.7917  c
126.081 95.7917 125.237 95.6772 124.227 95.4480  c
h
134.430 95.5261 m
134.430 94.4480 l
136.602 94.4480 l
136.602 85.8855 l
134.430 86.4324 l
134.430 85.3230 l
138.055 84.4167 l
138.055 94.4480 l
140.227 94.4480 l
140.227 95.5261 l
134.430 95.5261 l
h
146.368 95.7917 m
145.254 95.7917 144.350 95.2657 143.657 94.2136  c
142.965 93.1615 142.618 91.7917 142.618 90.1042  c
142.618 88.3959 142.967 87.0209 143.665 85.9792  c
144.363 84.9376 145.280 84.4167 146.415 84.4167  c
147.550 84.4167 148.467 84.9376 149.165 85.9792  c
149.863 87.0209 150.212 88.3855 150.212 90.0730  c
150.212 91.8126 149.863 93.2006 149.165 94.2371  c
148.467 95.2735 147.535 95.7917 146.368 95.7917  c
h
146.384 94.7136 m
147.915 94.7136 148.681 93.1615 148.681 90.0574  c
148.681 87.0157 147.925 85.4949 146.415 85.4949  c
144.905 85.4949 144.149 87.0313 144.149 90.1042  c
144.149 93.1772 144.894 94.7136 146.384 94.7136  c
h
156.791 95.5261 m
156.791 92.4636 l
151.916 92.4636 l
151.916 91.3699 l
156.791 84.6824 l
158.150 84.6824 l
158.150 91.2761 l
159.603 91.2761 l
159.603 92.4636 l
158.150 92.4636 l
158.150 95.5261 l
156.791 95.5261 l
h
153.337 91.2761 m
156.900 91.2761 l
156.900 86.4636 l
153.337 91.2761 l
h
167.006 93.0886 m
167.006 92.0105 l
175.678 92.0105 l
175.678 93.0886 l
167.006 93.0886 l
h
167.006 90.3699 m
167.006 89.2917 l
175.678 89.2917 l
175.678 90.3699 l
167.006 90.3699 l
h
f
1.60000 M
10.0000 M
newpath
427.133 142.792 m
426.018 142.792 425.115 142.266 424.422 141.214  c
423.729 140.162 423.383 138.792 423.383 137.104  c
423.383 135.396 423.732 134.021 424.430 132.979  c
425.128 131.938 426.045 131.417 427.180 131.417  c
428.315 131.417 429.232 131.938 429.930 132.979  c
430.628 134.021 430.977 135.385 430.977 137.073  c
430.977 138.813 430.628 140.201 429.930 141.237  c
429.232 142.274 428.300 142.792 427.133 142.792  c
h
427.149 141.714 m
428.680 141.714 429.446 140.162 429.446 137.057  c
429.446 134.016 428.690 132.495 427.180 132.495  c
425.670 132.495 424.914 134.031 424.914 137.104  c
424.914 140.177 425.659 141.714 427.149 141.714  c
h
434.165 142.526 m
434.165 141.448 l
436.337 141.448 l
436.337 132.885 l
434.165 133.432 l
434.165 132.323 l
437.790 131.417 l
437.790 141.448 l
439.962 141.448 l
439.962 142.526 l
434.165 142.526 l
h
446.103 142.792 m
444.988 142.792 444.085 142.266 443.392 141.214  c
442.699 140.162 442.353 138.792 442.353 137.104  c
442.353 135.396 442.702 134.021 443.400 132.979  c
444.098 131.938 445.014 131.417 446.150 131.417  c
447.285 131.417 448.202 131.938 448.900 132.979  c
449.598 134.021 449.947 135.385 449.947 137.073  c
449.947 138.813 449.598 140.201 448.900 141.237  c
448.202 142.274 447.269 142.792 446.103 142.792  c
h
446.118 141.714 m
447.650 141.714 448.415 140.162 448.415 137.057  c
448.415 134.016 447.660 132.495 446.150 132.495  c
444.639 132.495 443.884 134.031 443.884 137.104  c
443.884 140.177 444.629 141.714 446.118 141.714  c
h
460.334 142.792 m
459.219 142.792 458.316 142.266 457.623 141.214  c
456.930 140.162 456.584 138.792 456.584 137.104  c
456.584 135.396 456.933 134.021 457.631 132.979  c
458.329 131.938 459.245 131.417 460.381 131.417  c
461.516 131.417 462.433 131.938 463.131 132.979  c
463.829 134.021 464.177 135.385 464.177 137.073  c
464.177 138.813 463.829 140.201 463.131 141.237  c
462.433 142.274 461.500 142.792 460.334 142.792  c
h
460.349 141.714 m
461.881 141.714 462.646 140.162 462.646 137.057  c
462.646 134.016 461.891 132.495 460.381 132.495  c
458.870 132.495 458.115 134.031 458.115 137.104  c
458.115 140.177 458.860 141.714 460.349 141.714  c
h
469.819 142.792 m
468.704 142.792 467.800 142.266 467.108 141.214  c
466.415 140.162 466.069 138.792 466.069 137.104  c
466.069 135.396 466.418 134.021 467.115 132.979  c
467.813 131.938 468.730 131.417 469.865 131.417  c
471.001 131.417 471.918 131.938 472.615 132.979  c
473.313 134.021 473.662 135.385 473.662 137.073  c
473.662 138.813 473.313 140.201 472.615 141.237  c
471.918 142.274 470.985 142.792 469.819 142.792  c
h
469.834 141.714 m
471.365 141.714 472.131 140.162 472.131 137.057  c
472.131 134.016 471.376 132.495 469.865 132.495  c
468.355 132.495 467.600 134.031 467.600 137.104  c
467.600 140.177 468.345 141.714 469.834 141.714  c
h
479.303 142.792 m
478.189 142.792 477.285 142.266 476.593 141.214  c
475.900 140.162 475.553 138.792 475.553 137.104  c
475.553 135.396 475.902 134.021 476.600 132.979  c
477.298 131.938 478.215 131.417 479.350 131.417  c
480.486 131.417 481.402 131.938 482.100 132.979  c
482.798 134.021 483.147 135.385 483.147 137.073  c
483.147 138.813 482.798 140.201 482.100 141.237  c
481.402 142.274 480.470 142.792 479.303 142.792  c
h
479.319 141.714 m
480.850 141.714 481.616 140.162 481.616 137.057  c
481.616 134.016 480.861 132.495 479.350 132.495  c
477.840 132.495 477.085 134.031 477.085 137.104  c
477.085 140.177 477.830 141.714 479.319 141.714  c
h
488.788 142.792 m
487.674 142.792 486.770 142.266 486.077 141.214  c
485.385 140.162 485.038 138.792 485.038 137.104  c
485.038 135.396 485.387 134.021 486.085 132.979  c
486.783 131.938 487.700 131.417 488.835 131.417  c
489.971 131.417 490.887 131.938 491.585 132.979  c
492.283 134.021 492.632 135.385 492.632 137.073  c
492.632 138.813 492.283 140.201 491.585 141.237  c
490.887 142.274 489.955 142.792 488.788 142.792  c
h
488.804 141.714 m
490.335 141.714 491.101 140.162 491.101 137.057  c
491.101 134.016 490.346 132.495 488.835 132.495  c
487.325 132.495 486.570 134.031 486.570 137.104  c
486.570 140.177 487.314 141.714 488.804 141.714  c
h
f
0 J
1.45000 M
.200000 .400000 1.00000 RG
newpath
422.000 122.000 m
494.000 122.000 l
494.000 152.000 l
422.000 152.000 l
422.000 122.000 l
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
340.633 142.792 m
339.518 142.792 338.615 142.266 337.922 141.214  c
337.229 140.162 336.883 138.792 336.883 137.104  c
336.883 135.396 337.232 134.021 337.930 132.979  c
338.628 131.938 339.545 131.417 340.680 131.417  c
341.815 131.417 342.732 131.938 343.430 132.979  c
344.128 134.021 344.477 135.385 344.477 137.073  c
344.477 138.813 344.128 140.201 343.430 141.237  c
342.732 142.274 341.800 142.792 340.633 142.792  c
h
340.649 141.714 m
342.180 141.714 342.946 140.162 342.946 137.057  c
342.946 134.016 342.190 132.495 340.680 132.495  c
339.170 132.495 338.414 134.031 338.414 137.104  c
338.414 140.177 339.159 141.714 340.649 141.714  c
h
350.118 142.792 m
349.003 142.792 348.100 142.266 347.407 141.214  c
346.714 140.162 346.368 138.792 346.368 137.104  c
346.368 135.396 346.717 134.021 347.415 132.979  c
348.113 131.938 349.029 131.417 350.165 131.417  c
351.300 131.417 352.217 131.938 352.915 132.979  c
353.613 134.021 353.962 135.385 353.962 137.073  c
353.962 138.813 353.613 140.201 352.915 141.237  c
352.217 142.274 351.285 142.792 350.118 142.792  c
h
350.134 141.714 m
351.665 141.714 352.430 140.162 352.430 137.057  c
352.430 134.016 351.675 132.495 350.165 132.495  c
348.654 132.495 347.899 134.031 347.899 137.104  c
347.899 140.177 348.644 141.714 350.134 141.714  c
h
359.603 142.792 m
358.488 142.792 357.585 142.266 356.892 141.214  c
356.199 140.162 355.853 138.792 355.853 137.104  c
355.853 135.396 356.202 134.021 356.900 132.979  c
357.598 131.938 358.514 131.417 359.650 131.417  c
360.785 131.417 361.702 131.938 362.400 132.979  c
363.098 134.021 363.447 135.385 363.447 137.073  c
363.447 138.813 363.098 140.201 362.400 141.237  c
361.702 142.274 360.769 142.792 359.603 142.792  c
h
359.618 141.714 m
361.150 141.714 361.915 140.162 361.915 137.057  c
361.915 134.016 361.160 132.495 359.650 132.495  c
358.139 132.495 357.384 134.031 357.384 137.104  c
357.384 140.177 358.129 141.714 359.618 141.714  c
h
371.381 142.526 m
371.381 141.448 l
373.552 141.448 l
373.552 132.885 l
371.381 133.432 l
371.381 132.323 l
375.006 131.417 l
375.006 141.448 l
377.177 141.448 l
377.177 142.526 l
371.381 142.526 l
h
380.865 142.526 m
380.865 141.448 l
383.037 141.448 l
383.037 132.885 l
380.865 133.432 l
380.865 132.323 l
384.490 131.417 l
384.490 141.448 l
386.662 141.448 l
386.662 142.526 l
380.865 142.526 l
h
392.803 142.792 m
391.689 142.792 390.785 142.266 390.093 141.214  c
389.400 140.162 389.053 138.792 389.053 137.104  c
389.053 135.396 389.402 134.021 390.100 132.979  c
390.798 131.938 391.715 131.417 392.850 131.417  c
393.986 131.417 394.902 131.938 395.600 132.979  c
396.298 134.021 396.647 135.385 396.647 137.073  c
396.647 138.813 396.298 140.201 395.600 141.237  c
394.902 142.274 393.970 142.792 392.803 142.792  c
h
392.819 141.714 m
394.350 141.714 395.116 140.162 395.116 137.057  c
395.116 134.016 394.361 132.495 392.850 132.495  c
391.340 132.495 390.585 134.031 390.585 137.104  c
390.585 140.177 391.330 141.714 392.819 141.714  c
h
402.288 142.792 m
401.174 142.792 400.270 142.266 399.577 141.214  c
398.885 140.162 398.538 138.792 398.538 137.104  c
398.538 135.396 398.887 134.021 399.585 132.979  c
400.283 131.938 401.200 131.417 402.335 131.417  c
403.471 131.417 404.387 131.938 405.085 132.979  c
405.783 134.021 406.132 135.385 406.132 137.073  c
406.132 138.813 405.783 140.201 405.085 141.237  c
404.387 142.274 403.455 142.792 402.288 142.792  c
h
402.304 141.714 m
403.835 141.714 404.601 140.162 404.601 137.057  c
404.601 134.016 403.846 132.495 402.335 132.495  c
400.825 132.495 400.070 134.031 400.070 137.104  c
400.070 140.177 400.814 141.714 402.304 141.714  c
h
f
0 J
1.45000 M
0.00000 1.00000 0.00000 RG
newpath
335.500 122.000 m
407.500 122.000 l
407.500 152.000 l
335.500 152.000 l
335.500 122.000 l
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
0 J
1.45000 M
.200000 .400000 1.00000 RG
newpath
495.000 75.0000 m
567.000 75.0000 l
567.000 105.000 l
495.000 105.000 l
495.000 75.0000 l
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
0 J
1.45000 M
0.00000 1.00000 0.00000 RG
newpath
411.000 75.0000 m
495.000 75.0000 l
495.000 105.000 l
411.000 105.000 l
411.000 75.0000 l
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
413.848 142.895 m
413.848 141.738 l
416.160 141.738 l
416.160 132.613 l
413.848 133.191 l
413.848 132.004 l
417.707 131.035 l
417.707 141.738 l
420.020 141.738 l
420.020 142.895 l
413.848 142.895 l
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
411.000 122.000 m
422.000 122.000 l
422.000 152.000 l
411.000 152.000 l
411.000 122.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
1.00000 0.00000 0.00000 RG
newpath
329.957 143.191 m
328.770 143.191 327.806 142.629 327.066 141.504  c
326.327 140.379 325.957 138.910 325.957 137.098  c
325.957 135.275 326.329 133.809 327.074 132.699  c
327.819 131.590 328.796 131.035 330.004 131.035  c
331.223 131.035 332.202 131.590 332.941 132.699  c
333.681 133.809 334.051 135.270 334.051 137.082  c
334.051 138.936 333.681 140.418 332.941 141.527  c
332.202 142.637 331.207 143.191 329.957 143.191  c
h
329.973 142.020 m
331.608 142.020 332.426 140.363 332.426 137.051  c
332.426 133.811 331.618 132.191 330.004 132.191  c
328.400 132.191 327.598 133.827 327.598 137.098  c
327.598 140.379 328.389 142.020 329.973 142.020  c
h
f
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
324.500 122.000 m
335.500 122.000 l
335.500 152.000 l
324.500 152.000 l
324.500 122.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
81.3469 142.448 m
81.3469 141.104 l
82.3782 141.510 83.1907 141.714 83.7844 141.714  c
84.4719 141.714 85.0318 141.513 85.4641 141.112  c
85.8964 140.711 86.1125 140.188 86.1125 139.542  c
86.1125 138.021 85.0448 137.260 82.9094 137.260  c
82.3469 137.260 l
82.3469 136.292 l
82.8469 136.276 l
84.8469 136.276 85.8469 135.573 85.8469 134.167  c
85.8469 133.052 85.1907 132.495 83.8782 132.495  c
83.1490 132.495 82.3521 132.698 81.4875 133.104  c
81.4875 131.854 l
82.3417 131.563 83.1698 131.417 83.9719 131.417  c
86.1907 131.417 87.3000 132.255 87.3000 133.932  c
87.3000 135.203 86.5448 136.109 85.0344 136.651  c
86.7844 137.057 87.6594 138.016 87.6594 139.526  c
87.6594 140.547 87.3235 141.346 86.6516 141.925  c
85.9797 142.503 85.0553 142.792 83.8782 142.792  c
83.2011 142.792 82.3573 142.677 81.3469 142.448  c
h
91.5505 142.526 m
91.5505 141.448 l
93.7224 141.448 l
93.7224 132.885 l
91.5505 133.432 l
91.5505 132.323 l
95.1755 131.417 l
95.1755 141.448 l
97.3474 141.448 l
97.3474 142.526 l
91.5505 142.526 l
h
103.489 142.792 m
102.374 142.792 101.470 142.266 100.778 141.214  c
100.085 140.162 99.7385 138.792 99.7385 137.104  c
99.7385 135.396 100.087 134.021 100.785 132.979  c
101.483 131.938 102.400 131.417 103.535 131.417  c
104.671 131.417 105.587 131.938 106.285 132.979  c
106.983 134.021 107.332 135.385 107.332 137.073  c
107.332 138.813 106.983 140.201 106.285 141.237  c
105.587 142.274 104.655 142.792 103.489 142.792  c
h
103.504 141.714 m
105.035 141.714 105.801 140.162 105.801 137.057  c
105.801 134.016 105.046 132.495 103.535 132.495  c
102.025 132.495 101.270 134.031 101.270 137.104  c
101.270 140.177 102.015 141.714 103.504 141.714  c
h
113.911 142.526 m
113.911 139.464 l
109.036 139.464 l
109.036 138.370 l
113.911 131.682 l
115.270 131.682 l
115.270 138.276 l
116.723 138.276 l
116.723 139.464 l
115.270 139.464 l
115.270 142.526 l
113.911 142.526 l
h
110.458 138.276 m
114.020 138.276 l
114.020 133.464 l
110.458 138.276 l
h
126.845 143.698 m
126.845 144.698 l
125.782 143.979 124.944 143.003 124.329 141.768  c
123.715 140.534 123.407 139.219 123.407 137.823  c
123.407 136.427 123.715 135.115 124.329 133.885  c
124.944 132.656 125.782 131.682 126.845 130.964  c
126.845 131.964 l
126.126 132.745 125.613 133.583 125.306 134.479  c
124.999 135.375 124.845 136.490 124.845 137.823  c
124.845 139.156 124.999 140.274 125.306 141.175  c
125.613 142.076 126.126 142.917 126.845 143.698  c
h
131.926 142.714 m
130.853 142.714 129.962 142.315 129.254 141.518  c
128.546 140.721 128.192 139.719 128.192 138.510  c
128.192 137.208 128.543 136.198 129.246 135.479  c
129.949 134.760 130.926 134.401 132.176 134.401  c
132.801 134.401 133.494 134.484 134.254 134.651  c
134.254 135.854 l
133.442 135.615 132.780 135.495 132.270 135.495  c
131.530 135.495 130.936 135.774 130.489 136.331  c
130.041 136.888 129.817 137.625 129.817 138.542  c
129.817 139.438 130.046 140.162 130.504 140.714  c
130.962 141.266 131.561 141.542 132.301 141.542  c
132.968 141.542 133.650 141.375 134.348 141.042  c
134.348 142.292 l
133.410 142.573 132.603 142.714 131.926 142.714  c
h
139.625 142.714 m
138.479 142.714 137.567 142.336 136.890 141.581  c
136.213 140.826 135.875 139.813 135.875 138.542  c
135.875 137.271 136.216 136.263 136.898 135.518  c
137.580 134.774 138.505 134.401 139.672 134.401  c
140.838 134.401 141.763 134.774 142.445 135.518  c
143.127 136.263 143.469 137.271 143.469 138.542  c
143.469 139.833 143.125 140.852 142.437 141.596  c
141.750 142.341 140.812 142.714 139.625 142.714  c
h
139.640 141.620 m
141.172 141.620 141.937 140.594 141.937 138.542  c
141.937 136.500 141.182 135.479 139.672 135.479  c
138.161 135.479 137.406 136.500 137.406 138.542  c
137.406 140.594 138.151 141.620 139.640 141.620  c
h
145.714 142.526 m
145.714 134.573 l
147.167 134.573 l
147.167 136.073 l
147.865 134.958 148.766 134.401 149.870 134.401  c
150.932 134.401 151.656 134.958 152.042 136.073  c
152.729 134.948 153.620 134.385 154.714 134.385  c
155.412 134.385 155.956 134.591 156.346 135.003  c
156.737 135.414 156.932 135.995 156.932 136.745  c
156.932 142.526 l
155.479 142.526 l
155.479 136.964 l
155.479 136.057 155.120 135.604 154.401 135.604  c
153.651 135.604 152.865 136.135 152.042 137.198  c
152.042 142.526 l
150.604 142.526 l
150.604 136.964 l
150.604 136.057 150.234 135.604 149.495 135.604  c
148.766 135.604 147.990 136.135 147.167 137.198  c
147.167 142.526 l
145.714 142.526 l
h
159.718 145.417 m
159.718 134.573 l
161.171 134.573 l
161.171 136.073 l
161.754 134.958 162.639 134.401 163.827 134.401  c
164.785 134.401 165.538 134.750 166.085 135.448  c
166.632 136.146 166.905 137.099 166.905 138.307  c
166.905 139.630 166.595 140.695 165.975 141.503  c
165.356 142.310 164.535 142.714 163.514 142.714  c
162.577 142.714 161.796 142.349 161.171 141.620  c
161.171 145.417 l
159.718 145.417 l
h
161.171 140.635 m
161.910 141.292 162.619 141.620 163.296 141.620  c
164.681 141.620 165.374 140.563 165.374 138.448  c
165.374 136.583 164.759 135.651 163.530 135.651  c
162.718 135.651 161.931 136.089 161.171 136.964  c
161.171 140.635 l
h
169.158 142.526 m
169.158 134.573 l
170.612 134.573 l
170.612 136.073 l
171.184 134.958 172.013 134.401 173.096 134.401  c
173.242 134.401 173.398 134.412 173.565 134.432  c
173.565 135.776 l
173.315 135.693 173.091 135.651 172.893 135.651  c
171.987 135.651 171.226 136.193 170.612 137.276  c
170.612 142.526 l
169.158 142.526 l
h
181.124 142.276 m
180.166 142.568 179.343 142.714 178.656 142.714  c
177.478 142.714 176.520 142.323 175.781 141.542  c
175.041 140.760 174.671 139.750 174.671 138.510  c
174.671 137.302 174.997 136.313 175.648 135.542  c
176.299 134.771 177.135 134.385 178.156 134.385  c
179.114 134.385 179.856 134.727 180.382 135.409  c
180.908 136.091 181.171 137.063 181.171 138.323  c
181.156 138.776 l
176.140 138.776 l
176.348 140.662 177.275 141.604 178.921 141.604  c
179.525 141.604 180.260 141.443 181.124 141.120  c
181.124 142.276 l
h
176.202 137.698 m
179.718 137.698 l
179.718 136.219 179.166 135.479 178.062 135.479  c
176.958 135.479 176.338 136.219 176.202 137.698  c
h
185.762 142.714 m
185.106 142.714 184.309 142.557 183.372 142.245  c
183.372 140.917 l
184.309 141.385 185.127 141.620 185.825 141.620  c
186.242 141.620 186.585 141.508 186.856 141.284  c
187.127 141.060 187.262 140.781 187.262 140.448  c
187.262 139.958 186.882 139.552 186.122 139.229  c
185.278 138.870 l
184.028 138.349 183.403 137.604 183.403 136.635  c
183.403 135.938 183.650 135.391 184.145 134.995  c
184.640 134.599 185.315 134.401 186.169 134.401  c
186.606 134.401 187.153 134.458 187.809 134.573  c
188.106 134.635 l
188.106 135.839 l
187.304 135.599 186.669 135.479 186.200 135.479  c
185.262 135.479 184.794 135.818 184.794 136.495  c
184.794 136.922 185.148 137.287 185.856 137.589  c
186.559 137.885 l
187.341 138.219 187.895 138.568 188.223 138.932  c
188.552 139.297 188.716 139.755 188.716 140.307  c
188.716 141.005 188.440 141.581 187.887 142.034  c
187.335 142.487 186.627 142.714 185.762 142.714  c
h
193.409 142.714 m
192.753 142.714 191.956 142.557 191.018 142.245  c
191.018 140.917 l
191.956 141.385 192.774 141.620 193.471 141.620  c
193.888 141.620 194.232 141.508 194.503 141.284  c
194.774 141.060 194.909 140.781 194.909 140.448  c
194.909 139.958 194.529 139.552 193.768 139.229  c
192.925 138.870 l
191.675 138.349 191.050 137.604 191.050 136.635  c
191.050 135.938 191.297 135.391 191.792 134.995  c
192.287 134.599 192.961 134.401 193.815 134.401  c
194.253 134.401 194.800 134.458 195.456 134.573  c
195.753 134.635 l
195.753 135.839 l
194.951 135.599 194.315 135.479 193.846 135.479  c
192.909 135.479 192.440 135.818 192.440 136.495  c
192.440 136.922 192.794 137.287 193.503 137.589  c
194.206 137.885 l
194.987 138.219 195.542 138.568 195.870 138.932  c
196.198 139.297 196.362 139.755 196.362 140.307  c
196.362 141.005 196.086 141.581 195.534 142.034  c
194.982 142.487 194.274 142.714 193.409 142.714  c
h
204.774 142.276 m
203.816 142.568 202.993 142.714 202.305 142.714  c
201.128 142.714 200.170 142.323 199.430 141.542  c
198.691 140.760 198.321 139.750 198.321 138.510  c
198.321 137.302 198.647 136.313 199.298 135.542  c
199.949 134.771 200.785 134.385 201.805 134.385  c
202.764 134.385 203.506 134.727 204.032 135.409  c
204.558 136.091 204.821 137.063 204.821 138.323  c
204.805 138.776 l
199.790 138.776 l
199.998 140.662 200.925 141.604 202.571 141.604  c
203.175 141.604 203.910 141.443 204.774 141.120  c
204.774 142.276 l
h
199.852 137.698 m
203.368 137.698 l
203.368 136.219 202.816 135.479 201.712 135.479  c
200.608 135.479 199.988 136.219 199.852 137.698  c
h
212.412 142.526 m
212.412 141.026 l
211.829 142.151 210.944 142.714 209.756 142.714  c
208.808 142.714 208.058 142.365 207.506 141.667  c
206.954 140.969 206.678 140.010 206.678 138.792  c
206.678 137.469 206.990 136.406 207.615 135.604  c
208.240 134.802 209.058 134.401 210.069 134.401  c
211.017 134.401 211.798 134.760 212.412 135.479  c
212.412 130.964 l
213.865 130.964 l
213.865 142.526 l
212.412 142.526 l
h
212.412 136.464 m
211.662 135.807 210.954 135.479 210.287 135.479  c
208.902 135.479 208.209 136.537 208.209 138.651  c
208.209 140.516 208.829 141.448 210.069 141.448  c
210.860 141.448 211.642 141.010 212.412 140.135  c
212.412 136.464 l
h
215.963 143.698 m
215.963 144.698 l
217.025 143.979 217.864 143.003 218.478 141.768  c
219.093 140.534 219.400 139.219 219.400 137.823  c
219.400 136.427 219.093 135.115 218.478 133.885  c
217.864 132.656 217.025 131.682 215.963 130.964  c
215.963 131.964 l
216.681 132.745 217.194 133.583 217.502 134.479  c
217.809 135.375 217.963 136.490 217.963 137.823  c
217.963 139.156 217.809 140.274 217.502 141.175  c
217.194 142.076 216.681 142.917 215.963 143.698  c
h
f
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
