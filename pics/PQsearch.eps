%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 356 575 435
%%Creator: yExport 1.1
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, October 31, 2010 3:00:19 PM GMT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
888 124 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
888.000 0.00000 l
888.000 124.000 l
0.00000 124.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 888 124 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 157.000 -211.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-157.000 211.000 m
731.000 211.000 l
731.000 335.000 l
-157.000 335.000 l
-157.000 211.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 157.000 -211.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 157.000 -211.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 157.000 -211.000 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
494.093 235.901 m
494.781 235.016 495.645 234.573 496.687 234.573  c
497.635 234.573 498.411 234.885 499.015 235.510  c
499.619 236.135 499.921 236.938 499.921 237.917  c
499.921 239.052 499.583 239.982 498.906 240.706  c
498.229 241.430 497.369 241.792 496.328 241.792  c
495.140 241.792 494.208 241.313 493.531 240.354  c
492.854 239.396 492.515 238.063 492.515 236.354  c
492.515 234.469 492.903 233.005 493.679 231.964  c
494.455 230.922 495.546 230.401 496.953 230.401  c
497.598 230.401 498.406 230.542 499.375 230.823  c
499.375 232.073 l
498.354 231.688 497.515 231.495 496.859 231.495  c
495.015 231.495 494.093 232.964 494.093 235.901  c
h
498.468 238.245 m
498.468 237.422 498.286 236.776 497.921 236.307  c
497.557 235.839 497.046 235.604 496.390 235.604  c
495.776 235.604 495.250 235.810 494.812 236.221  c
494.375 236.633 494.156 237.125 494.156 237.698  c
494.156 238.604 494.364 239.333 494.781 239.885  c
495.197 240.438 495.750 240.714 496.437 240.714  c
497.062 240.714 497.557 240.490 497.921 240.042  c
498.286 239.594 498.468 238.995 498.468 238.245  c
h
505.703 241.792 m
504.589 241.792 503.685 241.266 502.992 240.214  c
502.299 239.162 501.953 237.792 501.953 236.104  c
501.953 234.396 502.302 233.021 503.000 231.979  c
503.698 230.938 504.615 230.417 505.750 230.417  c
506.885 230.417 507.802 230.938 508.500 231.979  c
509.198 233.021 509.547 234.385 509.547 236.073  c
509.547 237.813 509.198 239.201 508.500 240.237  c
507.802 241.274 506.870 241.792 505.703 241.792  c
h
505.719 240.714 m
507.250 240.714 508.016 239.162 508.016 236.057  c
508.016 233.016 507.260 231.495 505.750 231.495  c
504.240 231.495 503.484 233.031 503.484 236.104  c
503.484 239.177 504.229 240.714 505.719 240.714  c
h
f
0 J
1.45000 M
newpath
477.000 225.000 m
525.000 225.000 l
525.000 247.000 l
477.000 247.000 l
477.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
445.343 241.573 m
445.343 240.276 l
446.062 240.568 446.744 240.714 447.390 240.714  c
448.098 240.714 448.658 240.503 449.070 240.081  c
449.481 239.659 449.687 239.083 449.687 238.354  c
449.687 236.719 448.567 235.901 446.328 235.901  c
446.067 235.901 445.796 235.922 445.515 235.964  c
445.515 230.682 l
451.015 230.682 l
451.015 231.948 l
446.796 231.948 l
446.796 234.807 l
448.182 234.807 449.265 235.125 450.046 235.760  c
450.828 236.396 451.218 237.281 451.218 238.417  c
451.218 239.469 450.864 240.294 450.156 240.893  c
449.447 241.492 448.463 241.792 447.203 241.792  c
446.651 241.792 446.031 241.719 445.343 241.573  c
h
457.703 241.792 m
456.589 241.792 455.685 241.266 454.992 240.214  c
454.299 239.162 453.953 237.792 453.953 236.104  c
453.953 234.396 454.302 233.021 455.000 231.979  c
455.698 230.938 456.615 230.417 457.750 230.417  c
458.885 230.417 459.802 230.938 460.500 231.979  c
461.198 233.021 461.547 234.385 461.547 236.073  c
461.547 237.813 461.198 239.201 460.500 240.237  c
459.802 241.274 458.870 241.792 457.703 241.792  c
h
457.719 240.714 m
459.250 240.714 460.016 239.162 460.016 236.057  c
460.016 233.016 459.260 231.495 457.750 231.495  c
456.240 231.495 455.484 233.031 455.484 236.104  c
455.484 239.177 456.229 240.714 457.719 240.714  c
h
f
0 J
1.45000 M
newpath
429.000 225.000 m
477.000 225.000 l
477.000 247.000 l
429.000 247.000 l
429.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
397.046 241.448 m
397.046 240.104 l
398.078 240.510 398.890 240.714 399.484 240.714  c
400.171 240.714 400.731 240.513 401.164 240.112  c
401.596 239.711 401.812 239.188 401.812 238.542  c
401.812 237.021 400.744 236.260 398.609 236.260  c
398.046 236.260 l
398.046 235.292 l
398.546 235.276 l
400.546 235.276 401.546 234.573 401.546 233.167  c
401.546 232.052 400.890 231.495 399.578 231.495  c
398.848 231.495 398.052 231.698 397.187 232.104  c
397.187 230.854 l
398.041 230.563 398.869 230.417 399.671 230.417  c
401.890 230.417 403.000 231.255 403.000 232.932  c
403.000 234.203 402.244 235.109 400.734 235.651  c
402.484 236.057 403.359 237.016 403.359 238.526  c
403.359 239.547 403.023 240.346 402.351 240.925  c
401.679 241.503 400.755 241.792 399.578 241.792  c
398.901 241.792 398.057 241.677 397.046 241.448  c
h
409.703 241.792 m
408.589 241.792 407.685 241.266 406.992 240.214  c
406.299 239.162 405.953 237.792 405.953 236.104  c
405.953 234.396 406.302 233.021 407.000 231.979  c
407.698 230.938 408.615 230.417 409.750 230.417  c
410.885 230.417 411.802 230.938 412.500 231.979  c
413.198 233.021 413.547 234.385 413.547 236.073  c
413.547 237.813 413.198 239.201 412.500 240.237  c
411.802 241.274 410.870 241.792 409.703 241.792  c
h
409.719 240.714 m
411.250 240.714 412.016 239.162 412.016 236.057  c
412.016 233.016 411.260 231.495 409.750 231.495  c
408.240 231.495 407.484 233.031 407.484 236.104  c
407.484 239.177 408.229 240.714 409.719 240.714  c
h
f
0 J
1.45000 M
newpath
381.000 225.000 m
429.000 225.000 l
429.000 247.000 l
381.000 247.000 l
381.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
348.765 241.526 m
348.765 240.260 l
349.182 239.281 350.031 238.214 351.312 237.057  c
352.140 236.307 l
353.203 235.349 353.734 234.396 353.734 233.448  c
353.734 232.844 353.552 232.367 353.187 232.018  c
352.822 231.669 352.322 231.495 351.687 231.495  c
350.937 231.495 350.052 231.787 349.031 232.370  c
349.031 231.089 l
349.989 230.641 350.942 230.417 351.890 230.417  c
352.911 230.417 353.729 230.690 354.343 231.237  c
354.958 231.784 355.265 232.510 355.265 233.417  c
355.265 234.063 355.109 234.638 354.796 235.143  c
354.484 235.649 353.906 236.255 353.062 236.964  c
352.515 237.448 l
351.359 238.427 350.687 239.365 350.500 240.260  c
355.218 240.260 l
355.218 241.526 l
348.765 241.526 l
h
361.703 241.792 m
360.589 241.792 359.685 241.266 358.992 240.214  c
358.299 239.162 357.953 237.792 357.953 236.104  c
357.953 234.396 358.302 233.021 359.000 231.979  c
359.698 230.938 360.615 230.417 361.750 230.417  c
362.885 230.417 363.802 230.938 364.500 231.979  c
365.198 233.021 365.547 234.385 365.547 236.073  c
365.547 237.813 365.198 239.201 364.500 240.237  c
363.802 241.274 362.870 241.792 361.703 241.792  c
h
361.719 240.714 m
363.250 240.714 364.016 239.162 364.016 236.057  c
364.016 233.016 363.260 231.495 361.750 231.495  c
360.240 231.495 359.484 233.031 359.484 236.104  c
359.484 239.177 360.229 240.714 361.719 240.714  c
h
f
0 J
1.45000 M
newpath
333.000 225.000 m
381.000 225.000 l
381.000 247.000 l
333.000 247.000 l
333.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
306.836 235.901 m
307.523 235.016 308.388 234.573 309.429 234.573  c
310.377 234.573 311.153 234.885 311.758 235.510  c
312.362 236.135 312.664 236.938 312.664 237.917  c
312.664 239.052 312.325 239.982 311.648 240.706  c
310.971 241.430 310.112 241.792 309.070 241.792  c
307.883 241.792 306.950 241.313 306.273 240.354  c
305.596 239.396 305.258 238.063 305.258 236.354  c
305.258 234.469 305.646 233.005 306.422 231.964  c
307.198 230.922 308.289 230.401 309.695 230.401  c
310.341 230.401 311.148 230.542 312.117 230.823  c
312.117 232.073 l
311.096 231.688 310.258 231.495 309.601 231.495  c
307.758 231.495 306.836 232.964 306.836 235.901  c
h
311.211 238.245 m
311.211 237.422 311.028 236.776 310.664 236.307  c
310.299 235.839 309.789 235.604 309.133 235.604  c
308.518 235.604 307.992 235.810 307.554 236.221  c
307.117 236.633 306.898 237.125 306.898 237.698  c
306.898 238.604 307.107 239.333 307.523 239.885  c
307.940 240.438 308.492 240.714 309.179 240.714  c
309.804 240.714 310.299 240.490 310.664 240.042  c
311.028 239.594 311.211 238.995 311.211 238.245  c
h
f
0 J
1.45000 M
newpath
285.000 225.000 m
333.000 225.000 l
333.000 247.000 l
285.000 247.000 l
285.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
258.508 241.526 m
258.508 240.448 l
260.679 240.448 l
260.679 231.885 l
258.508 232.432 l
258.508 231.323 l
262.133 230.417 l
262.133 240.448 l
264.304 240.448 l
264.304 241.526 l
258.508 241.526 l
h
f
0 J
1.45000 M
newpath
237.000 225.000 m
285.000 225.000 l
285.000 247.000 l
237.000 247.000 l
237.000 225.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
445.218 317.464 m
445.218 316.229 l
446.135 316.552 446.916 316.714 447.562 316.714  c
448.458 316.714 449.161 316.331 449.671 315.565  c
450.182 314.800 450.437 313.734 450.437 312.370  c
449.697 313.276 448.864 313.729 447.937 313.729  c
447.020 313.729 446.244 313.393 445.609 312.721  c
444.973 312.050 444.656 311.229 444.656 310.260  c
444.656 309.156 444.994 308.240 445.671 307.510  c
446.348 306.781 447.197 306.417 448.218 306.417  c
449.395 306.417 450.325 306.888 451.007 307.831  c
451.690 308.774 452.031 310.068 452.031 311.714  c
452.031 313.578 451.617 315.057 450.789 316.151  c
449.960 317.245 448.838 317.792 447.421 317.792  c
446.859 317.792 446.125 317.682 445.218 317.464  c
h
446.093 309.979 m
446.093 310.823 446.281 311.487 446.656 311.971  c
447.031 312.456 447.546 312.698 448.203 312.698  c
448.807 312.698 449.325 312.490 449.757 312.073  c
450.190 311.656 450.406 311.156 450.406 310.573  c
450.406 309.646 450.197 308.901 449.781 308.339  c
449.364 307.776 448.817 307.495 448.140 307.495  c
447.505 307.495 447.005 307.719 446.640 308.167  c
446.276 308.615 446.093 309.219 446.093 309.979  c
h
457.703 317.792 m
456.589 317.792 455.685 317.266 454.992 316.214  c
454.299 315.162 453.953 313.792 453.953 312.104  c
453.953 310.396 454.302 309.021 455.000 307.979  c
455.698 306.938 456.615 306.417 457.750 306.417  c
458.885 306.417 459.802 306.938 460.500 307.979  c
461.198 309.021 461.547 310.385 461.547 312.073  c
461.547 313.813 461.198 315.201 460.500 316.237  c
459.802 317.274 458.870 317.792 457.703 317.792  c
h
457.719 316.714 m
459.250 316.714 460.016 315.162 460.016 312.057  c
460.016 309.016 459.260 307.495 457.750 307.495  c
456.240 307.495 455.484 309.031 455.484 312.104  c
455.484 315.177 456.229 316.714 457.719 316.714  c
h
f
0 J
1.45000 M
newpath
429.000 301.000 m
477.000 301.000 l
477.000 323.000 l
429.000 323.000 l
429.000 301.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
397.046 317.448 m
397.046 316.104 l
398.078 316.510 398.890 316.714 399.484 316.714  c
400.171 316.714 400.731 316.513 401.164 316.112  c
401.596 315.711 401.812 315.188 401.812 314.542  c
401.812 313.021 400.744 312.260 398.609 312.260  c
398.046 312.260 l
398.046 311.292 l
398.546 311.276 l
400.546 311.276 401.546 310.573 401.546 309.167  c
401.546 308.052 400.890 307.495 399.578 307.495  c
398.848 307.495 398.052 307.698 397.187 308.104  c
397.187 306.854 l
398.041 306.563 398.869 306.417 399.671 306.417  c
401.890 306.417 403.000 307.255 403.000 308.932  c
403.000 310.203 402.244 311.109 400.734 311.651  c
402.484 312.057 403.359 313.016 403.359 314.526  c
403.359 315.547 403.023 316.346 402.351 316.925  c
401.679 317.503 400.755 317.792 399.578 317.792  c
398.901 317.792 398.057 317.677 397.046 317.448  c
h
407.250 317.526 m
407.250 316.448 l
409.422 316.448 l
409.422 307.885 l
407.250 308.432 l
407.250 307.323 l
410.875 306.417 l
410.875 316.448 l
413.047 316.448 l
413.047 317.526 l
407.250 317.526 l
h
f
0 J
1.45000 M
newpath
381.000 301.000 m
429.000 301.000 l
429.000 323.000 l
381.000 323.000 l
381.000 301.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
348.765 317.526 m
348.765 316.260 l
349.182 315.281 350.031 314.214 351.312 313.057  c
352.140 312.307 l
353.203 311.349 353.734 310.396 353.734 309.448  c
353.734 308.844 353.552 308.367 353.187 308.018  c
352.822 307.669 352.322 307.495 351.687 307.495  c
350.937 307.495 350.052 307.787 349.031 308.370  c
349.031 307.089 l
349.989 306.641 350.942 306.417 351.890 306.417  c
352.911 306.417 353.729 306.690 354.343 307.237  c
354.958 307.784 355.265 308.510 355.265 309.417  c
355.265 310.063 355.109 310.638 354.796 311.143  c
354.484 311.649 353.906 312.255 353.062 312.964  c
352.515 313.448 l
351.359 314.427 350.687 315.365 350.500 316.260  c
355.218 316.260 l
355.218 317.526 l
348.765 317.526 l
h
358.531 317.448 m
358.531 316.104 l
359.562 316.510 360.375 316.714 360.969 316.714  c
361.656 316.714 362.216 316.513 362.648 316.112  c
363.081 315.711 363.297 315.188 363.297 314.542  c
363.297 313.021 362.229 312.260 360.094 312.260  c
359.531 312.260 l
359.531 311.292 l
360.031 311.276 l
362.031 311.276 363.031 310.573 363.031 309.167  c
363.031 308.052 362.375 307.495 361.062 307.495  c
360.333 307.495 359.536 307.698 358.672 308.104  c
358.672 306.854 l
359.526 306.563 360.354 306.417 361.156 306.417  c
363.375 306.417 364.484 307.255 364.484 308.932  c
364.484 310.203 363.729 311.109 362.219 311.651  c
363.969 312.057 364.844 313.016 364.844 314.526  c
364.844 315.547 364.508 316.346 363.836 316.925  c
363.164 317.503 362.240 317.792 361.062 317.792  c
360.385 317.792 359.542 317.677 358.531 317.448  c
h
f
0 J
1.45000 M
newpath
333.000 301.000 m
381.000 301.000 l
381.000 323.000 l
333.000 323.000 l
333.000 301.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
301.765 317.526 m
301.765 316.448 l
303.937 316.448 l
303.937 307.885 l
301.765 308.432 l
301.765 307.323 l
305.390 306.417 l
305.390 316.448 l
307.562 316.448 l
307.562 317.526 l
301.765 317.526 l
h
310.828 317.573 m
310.828 316.276 l
311.547 316.568 312.229 316.714 312.875 316.714  c
313.583 316.714 314.143 316.503 314.555 316.081  c
314.966 315.659 315.172 315.083 315.172 314.354  c
315.172 312.719 314.052 311.901 311.812 311.901  c
311.552 311.901 311.281 311.922 311.000 311.964  c
311.000 306.682 l
316.500 306.682 l
316.500 307.948 l
312.281 307.948 l
312.281 310.807 l
313.667 310.807 314.750 311.125 315.531 311.760  c
316.312 312.396 316.703 313.281 316.703 314.417  c
316.703 315.469 316.349 316.294 315.641 316.893  c
314.932 317.492 313.948 317.792 312.688 317.792  c
312.135 317.792 311.516 317.719 310.828 317.573  c
h
f
0 J
1.45000 M
newpath
285.000 301.000 m
333.000 301.000 l
333.000 323.000 l
285.000 323.000 l
285.000 301.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
259.711 311.620 m
258.648 310.880 258.117 310.068 258.117 309.182  c
258.117 308.359 258.416 307.690 259.015 307.175  c
259.614 306.659 260.398 306.401 261.367 306.401  c
262.263 306.401 262.987 306.620 263.539 307.057  c
264.091 307.495 264.367 308.057 264.367 308.745  c
264.367 309.797 263.695 310.755 262.351 311.620  c
263.987 312.422 264.804 313.453 264.804 314.714  c
264.804 315.630 264.461 316.372 263.773 316.940  c
263.086 317.508 262.200 317.792 261.117 317.792  c
260.054 317.792 259.195 317.524 258.539 316.987  c
257.883 316.451 257.554 315.740 257.554 314.854  c
257.554 313.563 258.273 312.484 259.711 311.620  c
h
261.539 311.167 m
262.549 310.500 263.054 309.760 263.054 308.948  c
263.054 308.510 262.888 308.159 262.554 307.893  c
262.221 307.628 261.778 307.495 261.226 307.495  c
260.695 307.495 260.263 307.625 259.929 307.885  c
259.596 308.146 259.429 308.484 259.429 308.901  c
259.429 309.307 259.580 309.672 259.883 309.995  c
260.185 310.318 260.737 310.708 261.539 311.167  c
h
260.492 312.214 m
259.909 312.662 259.513 313.052 259.304 313.385  c
259.096 313.719 258.992 314.135 258.992 314.635  c
258.992 315.250 259.192 315.750 259.594 316.135  c
259.995 316.521 260.523 316.714 261.179 316.714  c
261.804 316.714 262.317 316.550 262.719 316.221  c
263.120 315.893 263.320 315.469 263.320 314.948  c
263.320 314.531 263.198 314.177 262.953 313.885  c
262.708 313.594 262.232 313.240 261.523 312.823  c
260.492 312.214 l
h
f
0 J
1.45000 M
newpath
237.000 301.000 m
285.000 301.000 l
285.000 323.000 l
237.000 323.000 l
237.000 301.000 l
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
76.0681 241.526 m
76.0681 230.682 l
79.0056 230.682 l
80.3181 230.682 81.2608 230.904 81.8337 231.346  c
82.4067 231.789 82.6931 232.516 82.6931 233.526  c
82.6931 234.682 82.3025 235.586 81.5212 236.237  c
80.7400 236.888 79.6567 237.214 78.2712 237.214  c
77.5837 237.214 l
77.5837 241.526 l
76.0681 241.526 l
h
77.5837 236.057 m
78.2087 236.057 l
79.1254 236.057 79.8311 235.846 80.3259 235.425  c
80.8207 235.003 81.0681 234.412 81.0681 233.651  c
81.0681 232.995 80.8728 232.529 80.4822 232.253  c
80.0916 231.977 79.4431 231.839 78.5369 231.839  c
77.5837 231.839 l
77.5837 236.057 l
h
87.5154 241.714 m
86.3695 241.714 85.4581 241.336 84.7810 240.581  c
84.1039 239.826 83.7654 238.813 83.7654 237.542  c
83.7654 236.271 84.1065 235.263 84.7888 234.518  c
85.4711 233.774 86.3956 233.401 87.5623 233.401  c
88.7289 233.401 89.6534 233.774 90.3357 234.518  c
91.0180 235.263 91.3591 236.271 91.3591 237.542  c
91.3591 238.833 91.0154 239.852 90.3279 240.596  c
89.6404 241.341 88.7029 241.714 87.5154 241.714  c
h
87.5310 240.620 m
89.0623 240.620 89.8279 239.594 89.8279 237.542  c
89.8279 235.500 89.0727 234.479 87.5623 234.479  c
86.0518 234.479 85.2966 235.500 85.2966 237.542  c
85.2966 239.594 86.0414 240.620 87.5310 240.620  c
h
95.7136 241.714 m
95.0574 241.714 94.2605 241.557 93.3230 241.245  c
93.3230 239.917 l
94.2605 240.385 95.0782 240.620 95.7761 240.620  c
96.1928 240.620 96.5365 240.508 96.8074 240.284  c
97.0782 240.060 97.2136 239.781 97.2136 239.448  c
97.2136 238.958 96.8334 238.552 96.0730 238.229  c
95.2292 237.870 l
93.9792 237.349 93.3542 236.604 93.3542 235.635  c
93.3542 234.938 93.6016 234.391 94.0964 233.995  c
94.5912 233.599 95.2657 233.401 96.1199 233.401  c
96.5574 233.401 97.1042 233.458 97.7605 233.573  c
98.0574 233.635 l
98.0574 234.839 l
97.2553 234.599 96.6199 234.479 96.1511 234.479  c
95.2136 234.479 94.7449 234.818 94.7449 235.495  c
94.7449 235.922 95.0990 236.287 95.8074 236.589  c
96.5105 236.885 l
97.2917 237.219 97.8464 237.568 98.1746 237.932  c
98.5027 238.297 98.6667 238.755 98.6667 239.307  c
98.6667 240.005 98.3907 240.581 97.8386 241.034  c
97.2865 241.487 96.5782 241.714 95.7136 241.714  c
h
101.251 241.526 m
101.251 233.573 l
102.704 233.573 l
102.704 241.526 l
101.251 241.526 l
h
101.251 232.135 m
101.251 230.682 l
102.704 230.682 l
102.704 232.135 l
101.251 232.135 l
h
107.977 241.714 m
107.248 241.714 106.678 241.503 106.266 241.081  c
105.855 240.659 105.649 240.073 105.649 239.323  c
105.649 234.651 l
104.649 234.651 l
104.649 233.573 l
105.649 233.573 l
105.649 232.135 l
107.087 231.995 l
107.087 233.573 l
109.180 233.573 l
109.180 234.651 l
107.087 234.651 l
107.087 239.057 l
107.087 240.099 107.540 240.620 108.446 240.620  c
108.634 240.620 108.863 240.589 109.134 240.526  c
109.134 241.526 l
108.696 241.651 108.311 241.714 107.977 241.714  c
h
111.197 241.526 m
111.197 233.573 l
112.650 233.573 l
112.650 241.526 l
111.197 241.526 l
h
111.197 232.135 m
111.197 230.682 l
112.650 230.682 l
112.650 232.135 l
111.197 232.135 l
h
118.658 241.714 m
117.512 241.714 116.601 241.336 115.924 240.581  c
115.247 239.826 114.908 238.813 114.908 237.542  c
114.908 236.271 115.249 235.263 115.931 234.518  c
116.614 233.774 117.538 233.401 118.705 233.401  c
119.872 233.401 120.796 233.774 121.478 234.518  c
122.161 235.263 122.502 236.271 122.502 237.542  c
122.502 238.833 122.158 239.852 121.470 240.596  c
120.783 241.341 119.845 241.714 118.658 241.714  c
h
118.674 240.620 m
120.205 240.620 120.970 239.594 120.970 237.542  c
120.970 235.500 120.215 234.479 118.705 234.479  c
117.194 234.479 116.439 235.500 116.439 237.542  c
116.439 239.594 117.184 240.620 118.674 240.620  c
h
124.747 241.526 m
124.747 233.573 l
126.200 233.573 l
126.200 235.073 l
126.960 233.958 127.893 233.401 128.997 233.401  c
129.684 233.401 130.234 233.620 130.645 234.057  c
131.057 234.495 131.262 235.078 131.262 235.807  c
131.262 241.526 l
129.809 241.526 l
129.809 236.276 l
129.809 235.693 129.723 235.274 129.552 235.018  c
129.380 234.763 129.096 234.635 128.700 234.635  c
127.815 234.635 126.981 235.214 126.200 236.370  c
126.200 241.526 l
124.747 241.526 l
h
140.458 241.526 m
137.490 233.573 l
138.943 233.573 l
141.255 239.760 l
143.693 233.573 l
145.036 233.573 l
141.896 241.526 l
140.458 241.526 l
h
150.675 240.510 m
149.810 241.313 148.977 241.714 148.175 241.714  c
147.519 241.714 146.972 241.505 146.534 241.089  c
146.097 240.672 145.878 240.151 145.878 239.526  c
145.878 238.662 146.243 237.995 146.972 237.526  c
147.701 237.057 148.748 236.823 150.113 236.823  c
150.456 236.823 l
150.456 235.870 l
150.456 234.943 149.982 234.479 149.034 234.479  c
148.274 234.479 147.451 234.714 146.566 235.182  c
146.566 233.995 l
147.545 233.599 148.456 233.401 149.300 233.401  c
150.196 233.401 150.855 233.602 151.277 234.003  c
151.698 234.404 151.909 235.026 151.909 235.870  c
151.909 239.464 l
151.909 240.287 152.159 240.698 152.659 240.698  c
152.722 240.698 152.816 240.693 152.941 240.682  c
153.050 241.479 l
152.717 241.635 152.352 241.714 151.956 241.714  c
151.290 241.714 150.863 241.313 150.675 240.510  c
h
150.456 239.729 m
150.456 237.667 l
149.972 237.651 l
149.180 237.651 148.542 237.802 148.058 238.104  c
147.573 238.406 147.331 238.802 147.331 239.292  c
147.331 239.635 147.454 239.927 147.698 240.167  c
147.943 240.406 148.238 240.526 148.581 240.526  c
149.185 240.526 149.810 240.260 150.456 239.729  c
h
154.849 241.526 m
154.849 229.964 l
156.302 229.964 l
156.302 241.526 l
154.849 241.526 l
h
164.170 241.526 m
164.170 240.026 l
163.399 241.151 162.467 241.714 161.373 241.714  c
160.675 241.714 160.123 241.495 159.717 241.057  c
159.310 240.620 159.107 240.031 159.107 239.292  c
159.107 233.573 l
160.545 233.573 l
160.545 238.823 l
160.545 239.417 160.631 239.839 160.802 240.089  c
160.974 240.339 161.263 240.464 161.670 240.464  c
162.555 240.464 163.388 239.885 164.170 238.729  c
164.170 233.573 l
165.607 233.573 l
165.607 241.526 l
164.170 241.526 l
h
174.323 241.276 m
173.364 241.568 172.541 241.714 171.854 241.714  c
170.677 241.714 169.718 241.323 168.979 240.542  c
168.239 239.760 167.869 238.750 167.869 237.510  c
167.869 236.302 168.195 235.313 168.846 234.542  c
169.497 233.771 170.333 233.385 171.354 233.385  c
172.312 233.385 173.054 233.727 173.580 234.409  c
174.106 235.091 174.369 236.063 174.369 237.323  c
174.354 237.776 l
169.338 237.776 l
169.546 239.662 170.474 240.604 172.119 240.604  c
172.724 240.604 173.458 240.443 174.323 240.120  c
174.323 241.276 l
h
169.401 236.698 m
172.916 236.698 l
172.916 235.219 172.364 234.479 171.260 234.479  c
170.156 234.479 169.536 235.219 169.401 236.698  c
h
178.961 241.714 m
178.304 241.714 177.508 241.557 176.570 241.245  c
176.570 239.917 l
177.508 240.385 178.325 240.620 179.023 240.620  c
179.440 240.620 179.784 240.508 180.054 240.284  c
180.325 240.060 180.461 239.781 180.461 239.448  c
180.461 238.958 180.080 238.552 179.320 238.229  c
178.476 237.870 l
177.226 237.349 176.601 236.604 176.601 235.635  c
176.601 234.938 176.849 234.391 177.344 233.995  c
177.838 233.599 178.513 233.401 179.367 233.401  c
179.804 233.401 180.351 233.458 181.008 233.573  c
181.304 233.635 l
181.304 234.839 l
180.502 234.599 179.867 234.479 179.398 234.479  c
178.461 234.479 177.992 234.818 177.992 235.495  c
177.992 235.922 178.346 236.287 179.054 236.589  c
179.758 236.885 l
180.539 237.219 181.094 237.568 181.422 237.932  c
181.750 238.297 181.914 238.755 181.914 239.307  c
181.914 240.005 181.638 240.581 181.086 241.034  c
180.534 241.487 179.825 241.714 178.961 241.714  c
h
192.150 242.698 m
192.150 243.698 l
191.088 242.979 190.249 242.003 189.635 240.768  c
189.020 239.534 188.713 238.219 188.713 236.823  c
188.713 235.427 189.020 234.115 189.635 232.885  c
190.249 231.656 191.088 230.682 192.150 229.964  c
192.150 230.964 l
191.431 231.745 190.918 232.583 190.611 233.479  c
190.304 234.375 190.150 235.490 190.150 236.823  c
190.150 238.156 190.304 239.274 190.611 240.175  c
190.918 241.076 191.431 241.917 192.150 242.698  c
h
194.091 241.526 m
194.091 230.682 l
197.028 230.682 l
198.341 230.682 199.283 230.904 199.856 231.346  c
200.429 231.789 200.716 232.516 200.716 233.526  c
200.716 234.682 200.325 235.586 199.544 236.237  c
198.762 236.888 197.679 237.214 196.294 237.214  c
195.606 237.214 l
195.606 241.526 l
194.091 241.526 l
h
195.606 236.057 m
196.231 236.057 l
197.148 236.057 197.854 235.846 198.348 235.425  c
198.843 235.003 199.091 234.412 199.091 233.651  c
199.091 232.995 198.895 232.529 198.505 232.253  c
198.114 231.977 197.466 231.839 196.559 231.839  c
195.606 231.839 l
195.606 236.057 l
h
203.225 241.526 m
203.225 240.448 l
205.397 240.448 l
205.397 231.885 l
203.225 232.432 l
203.225 231.323 l
206.850 230.417 l
206.850 240.448 l
209.022 240.448 l
209.022 241.526 l
203.225 241.526 l
h
211.116 242.698 m
211.116 243.698 l
212.179 242.979 213.017 242.003 213.632 240.768  c
214.247 239.534 214.554 238.219 214.554 236.823  c
214.554 235.427 214.247 234.115 213.632 232.885  c
213.017 231.656 212.179 230.682 211.116 229.964  c
211.116 230.964 l
211.835 231.745 212.348 232.583 212.656 233.479  c
212.963 234.375 213.116 235.490 213.116 236.823  c
213.116 238.156 212.963 239.274 212.656 240.175  c
212.348 241.076 211.835 241.917 211.116 242.698  c
h
f
1.60000 M
10.0000 M
newpath
76.0681 317.526 m
76.0681 306.682 l
79.0056 306.682 l
80.3181 306.682 81.2608 306.904 81.8337 307.346  c
82.4067 307.789 82.6931 308.516 82.6931 309.526  c
82.6931 310.682 82.3025 311.586 81.5212 312.237  c
80.7400 312.888 79.6567 313.214 78.2712 313.214  c
77.5837 313.214 l
77.5837 317.526 l
76.0681 317.526 l
h
77.5837 312.057 m
78.2087 312.057 l
79.1254 312.057 79.8311 311.846 80.3259 311.425  c
80.8207 311.003 81.0681 310.412 81.0681 309.651  c
81.0681 308.995 80.8728 308.529 80.4822 308.253  c
80.0916 307.977 79.4431 307.839 78.5369 307.839  c
77.5837 307.839 l
77.5837 312.057 l
h
87.5154 317.714 m
86.3695 317.714 85.4581 317.336 84.7810 316.581  c
84.1039 315.826 83.7654 314.813 83.7654 313.542  c
83.7654 312.271 84.1065 311.263 84.7888 310.518  c
85.4711 309.774 86.3956 309.401 87.5623 309.401  c
88.7289 309.401 89.6534 309.774 90.3357 310.518  c
91.0180 311.263 91.3591 312.271 91.3591 313.542  c
91.3591 314.833 91.0154 315.852 90.3279 316.596  c
89.6404 317.341 88.7029 317.714 87.5154 317.714  c
h
87.5310 316.620 m
89.0623 316.620 89.8279 315.594 89.8279 313.542  c
89.8279 311.500 89.0727 310.479 87.5623 310.479  c
86.0518 310.479 85.2966 311.500 85.2966 313.542  c
85.2966 315.594 86.0414 316.620 87.5310 316.620  c
h
95.7136 317.714 m
95.0574 317.714 94.2605 317.557 93.3230 317.245  c
93.3230 315.917 l
94.2605 316.385 95.0782 316.620 95.7761 316.620  c
96.1928 316.620 96.5365 316.508 96.8074 316.284  c
97.0782 316.060 97.2136 315.781 97.2136 315.448  c
97.2136 314.958 96.8334 314.552 96.0730 314.229  c
95.2292 313.870 l
93.9792 313.349 93.3542 312.604 93.3542 311.635  c
93.3542 310.938 93.6016 310.391 94.0964 309.995  c
94.5912 309.599 95.2657 309.401 96.1199 309.401  c
96.5574 309.401 97.1042 309.458 97.7605 309.573  c
98.0574 309.635 l
98.0574 310.839 l
97.2553 310.599 96.6199 310.479 96.1511 310.479  c
95.2136 310.479 94.7449 310.818 94.7449 311.495  c
94.7449 311.922 95.0990 312.287 95.8074 312.589  c
96.5105 312.885 l
97.2917 313.219 97.8464 313.568 98.1746 313.932  c
98.5027 314.297 98.6667 314.755 98.6667 315.307  c
98.6667 316.005 98.3907 316.581 97.8386 317.034  c
97.2865 317.487 96.5782 317.714 95.7136 317.714  c
h
101.251 317.526 m
101.251 309.573 l
102.704 309.573 l
102.704 317.526 l
101.251 317.526 l
h
101.251 308.135 m
101.251 306.682 l
102.704 306.682 l
102.704 308.135 l
101.251 308.135 l
h
107.977 317.714 m
107.248 317.714 106.678 317.503 106.266 317.081  c
105.855 316.659 105.649 316.073 105.649 315.323  c
105.649 310.651 l
104.649 310.651 l
104.649 309.573 l
105.649 309.573 l
105.649 308.135 l
107.087 307.995 l
107.087 309.573 l
109.180 309.573 l
109.180 310.651 l
107.087 310.651 l
107.087 315.057 l
107.087 316.099 107.540 316.620 108.446 316.620  c
108.634 316.620 108.863 316.589 109.134 316.526  c
109.134 317.526 l
108.696 317.651 108.311 317.714 107.977 317.714  c
h
111.197 317.526 m
111.197 309.573 l
112.650 309.573 l
112.650 317.526 l
111.197 317.526 l
h
111.197 308.135 m
111.197 306.682 l
112.650 306.682 l
112.650 308.135 l
111.197 308.135 l
h
118.658 317.714 m
117.512 317.714 116.601 317.336 115.924 316.581  c
115.247 315.826 114.908 314.813 114.908 313.542  c
114.908 312.271 115.249 311.263 115.931 310.518  c
116.614 309.774 117.538 309.401 118.705 309.401  c
119.872 309.401 120.796 309.774 121.478 310.518  c
122.161 311.263 122.502 312.271 122.502 313.542  c
122.502 314.833 122.158 315.852 121.470 316.596  c
120.783 317.341 119.845 317.714 118.658 317.714  c
h
118.674 316.620 m
120.205 316.620 120.970 315.594 120.970 313.542  c
120.970 311.500 120.215 310.479 118.705 310.479  c
117.194 310.479 116.439 311.500 116.439 313.542  c
116.439 315.594 117.184 316.620 118.674 316.620  c
h
124.747 317.526 m
124.747 309.573 l
126.200 309.573 l
126.200 311.073 l
126.960 309.958 127.893 309.401 128.997 309.401  c
129.684 309.401 130.234 309.620 130.645 310.057  c
131.057 310.495 131.262 311.078 131.262 311.807  c
131.262 317.526 l
129.809 317.526 l
129.809 312.276 l
129.809 311.693 129.723 311.274 129.552 311.018  c
129.380 310.763 129.096 310.635 128.700 310.635  c
127.815 310.635 126.981 311.214 126.200 312.370  c
126.200 317.526 l
124.747 317.526 l
h
140.458 317.526 m
137.490 309.573 l
138.943 309.573 l
141.255 315.760 l
143.693 309.573 l
145.036 309.573 l
141.896 317.526 l
140.458 317.526 l
h
150.675 316.510 m
149.810 317.313 148.977 317.714 148.175 317.714  c
147.519 317.714 146.972 317.505 146.534 317.089  c
146.097 316.672 145.878 316.151 145.878 315.526  c
145.878 314.662 146.243 313.995 146.972 313.526  c
147.701 313.057 148.748 312.823 150.113 312.823  c
150.456 312.823 l
150.456 311.870 l
150.456 310.943 149.982 310.479 149.034 310.479  c
148.274 310.479 147.451 310.714 146.566 311.182  c
146.566 309.995 l
147.545 309.599 148.456 309.401 149.300 309.401  c
150.196 309.401 150.855 309.602 151.277 310.003  c
151.698 310.404 151.909 311.026 151.909 311.870  c
151.909 315.464 l
151.909 316.287 152.159 316.698 152.659 316.698  c
152.722 316.698 152.816 316.693 152.941 316.682  c
153.050 317.479 l
152.717 317.635 152.352 317.714 151.956 317.714  c
151.290 317.714 150.863 317.313 150.675 316.510  c
h
150.456 315.729 m
150.456 313.667 l
149.972 313.651 l
149.180 313.651 148.542 313.802 148.058 314.104  c
147.573 314.406 147.331 314.802 147.331 315.292  c
147.331 315.635 147.454 315.927 147.698 316.167  c
147.943 316.406 148.238 316.526 148.581 316.526  c
149.185 316.526 149.810 316.260 150.456 315.729  c
h
154.849 317.526 m
154.849 305.964 l
156.302 305.964 l
156.302 317.526 l
154.849 317.526 l
h
164.170 317.526 m
164.170 316.026 l
163.399 317.151 162.467 317.714 161.373 317.714  c
160.675 317.714 160.123 317.495 159.717 317.057  c
159.310 316.620 159.107 316.031 159.107 315.292  c
159.107 309.573 l
160.545 309.573 l
160.545 314.823 l
160.545 315.417 160.631 315.839 160.802 316.089  c
160.974 316.339 161.263 316.464 161.670 316.464  c
162.555 316.464 163.388 315.885 164.170 314.729  c
164.170 309.573 l
165.607 309.573 l
165.607 317.526 l
164.170 317.526 l
h
174.323 317.276 m
173.364 317.568 172.541 317.714 171.854 317.714  c
170.677 317.714 169.718 317.323 168.979 316.542  c
168.239 315.760 167.869 314.750 167.869 313.510  c
167.869 312.302 168.195 311.313 168.846 310.542  c
169.497 309.771 170.333 309.385 171.354 309.385  c
172.312 309.385 173.054 309.727 173.580 310.409  c
174.106 311.091 174.369 312.063 174.369 313.323  c
174.354 313.776 l
169.338 313.776 l
169.546 315.662 170.474 316.604 172.119 316.604  c
172.724 316.604 173.458 316.443 174.323 316.120  c
174.323 317.276 l
h
169.401 312.698 m
172.916 312.698 l
172.916 311.219 172.364 310.479 171.260 310.479  c
170.156 310.479 169.536 311.219 169.401 312.698  c
h
178.961 317.714 m
178.304 317.714 177.508 317.557 176.570 317.245  c
176.570 315.917 l
177.508 316.385 178.325 316.620 179.023 316.620  c
179.440 316.620 179.784 316.508 180.054 316.284  c
180.325 316.060 180.461 315.781 180.461 315.448  c
180.461 314.958 180.080 314.552 179.320 314.229  c
178.476 313.870 l
177.226 313.349 176.601 312.604 176.601 311.635  c
176.601 310.938 176.849 310.391 177.344 309.995  c
177.838 309.599 178.513 309.401 179.367 309.401  c
179.804 309.401 180.351 309.458 181.008 309.573  c
181.304 309.635 l
181.304 310.839 l
180.502 310.599 179.867 310.479 179.398 310.479  c
178.461 310.479 177.992 310.818 177.992 311.495  c
177.992 311.922 178.346 312.287 179.054 312.589  c
179.758 312.885 l
180.539 313.219 181.094 313.568 181.422 313.932  c
181.750 314.297 181.914 314.755 181.914 315.307  c
181.914 316.005 181.638 316.581 181.086 317.034  c
180.534 317.487 179.825 317.714 178.961 317.714  c
h
192.150 318.698 m
192.150 319.698 l
191.088 318.979 190.249 318.003 189.635 316.768  c
189.020 315.534 188.713 314.219 188.713 312.823  c
188.713 311.427 189.020 310.115 189.635 308.885  c
190.249 307.656 191.088 306.682 192.150 305.964  c
192.150 306.964 l
191.431 307.745 190.918 308.583 190.611 309.479  c
190.304 310.375 190.150 311.490 190.150 312.823  c
190.150 314.156 190.304 315.274 190.611 316.175  c
190.918 317.076 191.431 317.917 192.150 318.698  c
h
194.091 317.526 m
194.091 306.682 l
197.028 306.682 l
198.341 306.682 199.283 306.904 199.856 307.346  c
200.429 307.789 200.716 308.516 200.716 309.526  c
200.716 310.682 200.325 311.586 199.544 312.237  c
198.762 312.888 197.679 313.214 196.294 313.214  c
195.606 313.214 l
195.606 317.526 l
194.091 317.526 l
h
195.606 312.057 m
196.231 312.057 l
197.148 312.057 197.854 311.846 198.348 311.425  c
198.843 311.003 199.091 310.412 199.091 309.651  c
199.091 308.995 198.895 308.529 198.505 308.253  c
198.114 307.977 197.466 307.839 196.559 307.839  c
195.606 307.839 l
195.606 312.057 l
h
202.225 317.526 m
202.225 316.260 l
202.642 315.281 203.491 314.214 204.772 313.057  c
205.600 312.307 l
206.663 311.349 207.194 310.396 207.194 309.448  c
207.194 308.844 207.012 308.367 206.647 308.018  c
206.283 307.669 205.783 307.495 205.147 307.495  c
204.397 307.495 203.512 307.787 202.491 308.370  c
202.491 307.089 l
203.449 306.641 204.402 306.417 205.350 306.417  c
206.371 306.417 207.189 306.690 207.803 307.237  c
208.418 307.784 208.725 308.510 208.725 309.417  c
208.725 310.063 208.569 310.638 208.257 311.143  c
207.944 311.649 207.366 312.255 206.522 312.964  c
205.975 313.448 l
204.819 314.427 204.147 315.365 203.960 316.260  c
208.678 316.260 l
208.678 317.526 l
202.225 317.526 l
h
211.116 318.698 m
211.116 319.698 l
212.179 318.979 213.017 318.003 213.632 316.768  c
214.247 315.534 214.554 314.219 214.554 312.823  c
214.554 311.427 214.247 310.115 213.632 308.885  c
213.017 307.656 212.179 306.682 211.116 305.964  c
211.116 306.964 l
211.835 307.745 212.348 308.583 212.656 309.479  c
212.963 310.375 213.116 311.490 213.116 312.823  c
213.116 314.156 212.963 315.274 212.656 316.175  c
212.348 317.076 211.835 317.917 211.116 318.698  c
h
f
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
261.000 247.000 m
261.000 301.000 l
S
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
251.225 278.421 m
251.225 277.546 l
252.959 277.546 l
252.959 270.702 l
251.225 271.140 l
251.225 270.249 l
254.115 269.530 l
254.115 277.546 l
255.850 277.546 l
255.850 278.421 l
251.225 278.421 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
357.000 247.000 m
357.000 300.974 l
S
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
346.631 286.252 m
346.631 285.174 l
347.464 285.497 348.115 285.658 348.584 285.658  c
349.136 285.658 349.587 285.497 349.936 285.174  c
350.285 284.851 350.459 284.434 350.459 283.924  c
350.459 282.705 349.605 282.096 347.896 282.096  c
347.428 282.096 l
347.428 281.314 l
347.834 281.314 l
349.438 281.314 350.240 280.752 350.240 279.627  c
350.240 278.742 349.714 278.299 348.662 278.299  c
348.079 278.299 347.443 278.460 346.756 278.783  c
346.756 277.768 l
347.433 277.538 348.094 277.424 348.740 277.424  c
350.511 277.424 351.396 278.096 351.396 279.439  c
351.396 280.460 350.792 281.184 349.584 281.611  c
350.990 281.934 351.693 282.700 351.693 283.908  c
351.693 284.731 351.423 285.374 350.881 285.838  c
350.339 286.301 349.600 286.533 348.662 286.533  c
348.120 286.533 347.443 286.439 346.631 286.252  c
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
405.000 247.000 m
405.000 301.000 l
S
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
410.453 286.346 m
410.453 285.314 l
411.036 285.544 411.583 285.658 412.094 285.658  c
412.667 285.658 413.117 285.492 413.445 285.158  c
413.773 284.825 413.938 284.361 413.938 283.768  c
413.938 282.465 413.042 281.814 411.250 281.814  c
411.042 281.814 410.828 281.830 410.609 281.861  c
410.609 277.643 l
415.000 277.643 l
415.000 278.643 l
411.625 278.643 l
411.625 280.939 l
412.740 280.939 413.609 281.195 414.234 281.705  c
414.859 282.215 415.172 282.924 415.172 283.830  c
415.172 284.674 414.885 285.335 414.312 285.814  c
413.740 286.294 412.953 286.533 411.953 286.533  c
411.516 286.533 411.016 286.471 410.453 286.346  c
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
357.000 247.000 m
309.450 274.800 l
261.024 300.987 l
S
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
285.874 279.507 m
285.874 278.492 l
286.208 277.711 286.885 276.856 287.906 275.929  c
288.577 275.336 l
289.421 274.565 289.843 273.799 289.843 273.039  c
289.843 272.559 289.700 272.182 289.413 271.906  c
289.127 271.630 288.728 271.492 288.218 271.492  c
287.614 271.492 286.906 271.721 286.093 272.179  c
286.093 271.164 l
286.864 270.799 287.624 270.617 288.374 270.617  c
289.187 270.617 289.840 270.836 290.335 271.273  c
290.830 271.711 291.077 272.289 291.077 273.007  c
291.077 273.528 290.952 273.992 290.702 274.398  c
290.452 274.804 289.989 275.294 289.312 275.867  c
288.874 276.242 l
287.947 277.023 287.411 277.773 287.265 278.492  c
291.031 278.492 l
291.031 279.507 l
285.874 279.507 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
357.024 300.974 m
405.000 247.000 l
S
2 J
1.60000 M
[ ] 0.00000 d
0 J
1.45000 M
[ 6.00000 2.00000 ] 0.00000 d
newpath
372.959 271.711 m
372.959 269.258 l
369.053 269.258 l
369.053 268.383 l
372.959 263.039 l
374.053 263.039 l
374.053 268.305 l
375.209 268.305 l
375.209 269.258 l
374.053 269.258 l
374.053 271.711 l
372.959 271.711 l
h
370.194 268.305 m
373.037 268.305 l
373.037 264.461 l
370.194 268.305 l
h
f
2 J
10.0000 M
[ ] 0.00000 d
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
